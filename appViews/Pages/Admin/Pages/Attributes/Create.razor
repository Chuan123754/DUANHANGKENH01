@page "/admin/attribute/create"
@inject IAttributesServices AttributeService
@inject NavigationManager nav

<h3>Thêm Thuộc Tính</h3>

<EditForm Model="attribute" OnValidSubmit="SubmitForm" FormName="ddd">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div>
        <label>Title: </label>
        <InputText @bind-Value="attribute.Title"></InputText>
    </div>
    @*    <div class="form-group mb-3">
    <label for="attribute-title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
    <InputText id="attribute-title" class="form-control" @bind-Value="attribute.Title" required />
    <ValidationMessage For="@(() => attribute.Title)" />
    </div> *@
    <div>
        <label>Slug: </label>
        <InputText @bind-Value="attribute.Slug"></InputText>
    </div>
    @*   <div class="form-group mb-3">
    <label for="attribute-slug" class="form-label">Đường dẫn</label>
    <InputText id="attribute-slug" class="form-control" @bind-Value="attribute.Slug" />
    <small class="text-gray-100">“slug” là đường dẫn thân thiện của tên. Nó thường chỉ bao gồm kí tự viết thường, số và dấu gạch ngang, không dùng tiếng Việt.</small>
    </div> *@
    <div>
        <label>Parent_Id: </label>
        <InputNumber @bind-Value="attribute.Parent_Id"></InputNumber>
    </div>
    @*  <div class="form-group mb-3">
    <label for="attribute_parent_id" class="form-label">Chuyên mục cha</label>
    <InputSelect id="attribute_parent_id" class="form-control" @bind-Value="attribute.Parent_Id">
    <option value="">Chọn danh mục cha</option>
    @if (attributesList != null && attributesList.Any())
    {
    @foreach (var attr in attributesList)
    {
    <option value="@attr.Id">@attr.Title</option>
    }
    }
    </InputSelect>
    </div> *@
    <div>
        <label>Màu: </label>
        <InputText @bind-Value="attribute.Color"></InputText>
    </div>

    @*  <div class="form-group mb-3">
    <label for="attribute-color" class="form-label">Mã màu</label>
    <InputText id="attribute-color" class="form-control" @bind-Value="attribute.Color" />
    </div>
    *@
    <div>
        <label>Mẫu: </label>
        <InputText @bind-Value="attribute.Template"></InputText>
    </div>
    @*     <div class="form-group mb-3">
    <label for="attribute-template" class="form-label">Mẫu</label>
    <InputSelect id="attribute-template" class="form-control" @bind-Value="attribute.Template">
    <option value="default">Mặc định</option>
    <option value="color">Màu</option>
    </InputSelect>
    </div> *@
    <div>
        <label>In_Order: </label>
        <InputNumber @bind-Value="attribute.In_Order"></InputNumber>
    </div>

    @*     <div class="form-group mb-3">
    <label for="attribute-in-order" class="form-label">Thứ tự</label>
    <InputNumber id="attribute-in-order" class="form-control" @bind-Value="attribute.In_Order" Min="0" />
    </div> *@
    <div>
        <label>Description: </label>
        <InputText @bind-Value="attribute.Description"></InputText>
    </div>
    @*     <div class="form-group mb-3">
    <label for="attribute-description" class="form-label">Mô tả</label>
    <InputTextArea id="attribute-description" class="form-control" @bind-Value="attribute.Description" rows="3" />
    </div> *@
    <div>
        <label>Create at: </label>
        <InputDate @bind-Value="attribute.Created_at"></InputDate>
    </div>
    <div>
        <label>Create update: </label>
        <InputDate @bind-Value="attribute.Updated_at"></InputDate>
    </div>
    <div>
        <label>Create dele: </label>
        <InputDate @bind-Value="attribute.Deleted_at"></InputDate>
    </div>

    <button type="submit">Create</button>

    @*     <div class="form-group">
    <button type="submit" class="btn btn-primary">Thêm thuộc tính</button>
    </div> *@
</EditForm>

@code {
    private Attributes attribute = new Attributes(); // Đảm bảo biến attribute đã được khởi tạo

    // private List<Attributes> attributesList = new();

    // protected override async Task OnInitializedAsync()
    // {
    //     // Tải danh sách thuộc tính nếu chưa có
    //     attributesList = await AttributeService.GetAll();
    // }

    private async Task SubmitForm()
    {

        await AttributeService.Create(attribute); // Gọi API để tạo thuộc tính
        nav.NavigateTo("/admin/attribute"); // Điều hướng sau khi thành công
    }
}
