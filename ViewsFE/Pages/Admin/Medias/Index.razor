@page "/admin/media"
@inject FilesIServices sev
@inject IJSRuntime JS

<div class="page-wrapper">
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col d-flex gap-3">
                    <h2 class="page-title">Media</h2>
                </div>
            </div>
        </div>
    </div>
    <div class="page-body">
        <div class="container-xl">
            <form class="dropzone mb-5" id="dropzone-default" enctype="multipart/form-data">
                <div class="fallback">
                    <input name="file" type="file" accept="image/*" multiple />
                </div>
            </form>

            <div class="card">
                <div class="card-body">
                    <div class="search-box d-flex align-items-center justify-content-between mb-3">
                        <div></div>
                        <EditForm Model="files" OnValidSubmit="@OnSearch">
                            <div class="form-group d-flex gap-2">
                                <InputText id="search_input" class="form-control" @bind-Value="search_query" placeholder="Nhập từ khóa tìm kiếm" />
                                <button type="submit" class="btn btn-outline-primary">Tìm kiếm</button>
                            </div>
                        </EditForm>
                    </div>
                    <div id="table-default">
                        <FilesList FileItems="listFiles" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Files files = new();
    private List<Files> listFiles = new();
    private string search_query = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        listFiles = await sev.GetAll(); // Tải danh sách file từ API
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Chỉ gọi JS sau khi trang đã được render lần đầu tiên
            await JS.InvokeVoidAsync("initializeDropzone");
        }
    }

    private async Task OnSearch()
    {
        listFiles = await sev.Search(search_query);
    }

    [JSInvokable("OnUpload")]
    public async Task OnUpload()
    {
        Console.WriteLine("Hàm OnUpload được gọi");
        listFiles = await sev.GetAll();
        await JS.InvokeVoidAsync("toastr.success", "Tệp được tải lên thành công.");
        StateHasChanged(); // Thêm dòng này để cập nhật lại giao diện
    }

}
<script>
    window.initializeDropzone = () => {
        if (typeof Dropzone !== 'undefined') {
            if (Dropzone.instances.length > 0) {
                Dropzone.instances.forEach(dz => dz.destroy());
            }

            var dropzone = new Dropzone("#dropzone-default", {
                url: 'https://localhost:7011/api/Files/upload',
                autoProcessQueue: true,
                parallelUploads: 20,
                maxFilesize: 1,
                addRemoveLinks: true,
                success: function (file, response) {
                    // Kiểm tra phản hồi từ API để chắc chắn rằng không có lỗi
                    if (response.success) {
                        console.log("Upload thành công:", response);
                        DotNet.invokeMethodAsync('ViewsFE', 'OnUpload') // Gọi Blazor method
                            .then(() => {
                                toastr.success('Thêm thành công.');
                                console.log("File uploaded successfully and Blazor method invoked.");
                            })
                            .catch(error => {
                                toastr.error('Lỗi trong quá trình cập nhật UI.');
                                console.error('Error during UI refresh:', error);
                            });
                        this.removeFile(file);
                    } else {
                        toastr.error('Phản hồi không thành công từ API.');
                        console.error('Upload failed due to unsuccessful response:', response);
                    }
                },
                error: function (file, message) {
                    toastr.error('Thêm thất bại.');
                    console.error("Upload failed:", message);
                    this.removeFile(file);
                }
            });
        } else {
            console.error("Dropzone is not defined. Make sure the script is included.");
        }
    };
</script>

