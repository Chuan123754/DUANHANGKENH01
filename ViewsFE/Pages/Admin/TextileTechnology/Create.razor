@page "/admin/textiletechnology/create"
@inject NavigationManager nav
@inject ITextile_technologyServices sev
@inject IJSRuntime JS
 @using BlazorBootstrap
<EditForm Model="technology" OnValidSubmit="SubmitForm" FormName="textiletechnologyadd">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="page-wrapper">
        <div class="page-header d-print-none">
            <div class="container-xl">
                <div class="row g-2 align-items-center">
                    <div class="col">
                        <h2 class="page-title">
                            Thêm công nghệ dệt
                        </h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="page-body">
            <div class="container-xl">
                <div class="row">
                    <div class="col-md-12 col-12">
                        <div class="card">
                            <div class="card-body">

                                <div class="form-group mb-3">
                                    <label for="material-title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
                                    <InputText id="material-title" class="form-control" @bind-Value="technology.Title" @oninput="GenerateSlug" />
                                    <ValidationMessage For="@(() => technology.Title)" />
                                </div>

                                <div class="form-group mb-3">
                                    <label for="attribute-slug" class="form-label">Đường dẫn <span class="text-danger">*</span></label>
                                    <InputText id="attribute-slug" class="form-control" @bind-Value="technology.Slug" />
                                    <small class="text-gray-100">“slug” là đường dẫn thân thiện của tên. Nó thường chỉ bao gồm kí tự viết thường, số và dấu gạch ngang, không dùng tiếng Việt.</small>
                                    <ValidationMessage For="@(() => technology.Slug)" />
                                </div>

                                <div class="form-group mb-3">
                                    <label for="attribute-color" class="form-label">Mô tả</label>
                                    <InputText id="attribute-color" class="form-control" @bind-Value="technology.Description" />
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary" style="float: right">
                                        Thêm công nghệ dệt
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>
<ConfirmDialog @ref="dialog" />
@code {
    private Textile_technology technology = new Textile_technology();
    private ConfirmDialog dialog = default!;
    private void GenerateSlug(ChangeEventArgs e)
    {
        if (e.Value is string title && !string.IsNullOrWhiteSpace(title))
        {
            technology.Slug = CreateSlug(title);
        }
    }

    private string CreateSlug(string input)
    {
        // Chuyển sang chữ thường
        string result = input.ToLowerInvariant();

        // Loại bỏ dấu tiếng Việt
        result = RemoveDiacritics(result);

        // Loại bỏ ký tự không phải chữ/số và thay thế khoảng trắng bằng dấu gạch ngang
        result = System.Text.RegularExpressions.Regex.Replace(result, @"[^a-z0-9\s-]", "");
        result = System.Text.RegularExpressions.Regex.Replace(result, @"\s+", "-").Trim('-');

        return result;
    }

    private string RemoveDiacritics(string text)
    {
        var normalized = text.Normalize(System.Text.NormalizationForm.FormD);
        var stringBuilder = new System.Text.StringBuilder();
        foreach (var c in normalized)
        {
            var unicodeCategory = System.Globalization.CharUnicodeInfo.GetUnicodeCategory(c);
            if (unicodeCategory != System.Globalization.UnicodeCategory.NonSpacingMark)
            {
                stringBuilder.Append(c);
            }
        }
        return stringBuilder.ToString().Normalize(System.Text.NormalizationForm.FormC);
    }
    private async Task SubmitForm()
    {
        var options = new ConfirmDialogOptions
            {
                YesButtonText = "OK",
                YesButtonColor = ButtonColor.Success,
                NoButtonText = "CANCEL",
                NoButtonColor = ButtonColor.Danger
            };

        var confirmation = await dialog.ShowAsync(
            title: "Đưa ra sự lựa chọn",
            message1: "Bạn có muốn thêm công nghệ dệt?",
            confirmDialogOptions: options);
        if (confirmation)
        {
            technology.Create_at = DateTime.Now;
            try
            {
                await sev.Create(technology); // Gọi API để tạo thuộc tính
                await JS.InvokeVoidAsync("toastr.success", "Công nghệ dệt đã được thêm thành công"); // Hiển thị thông báo thành công
                nav.NavigateTo("/admin/textiletechnology"); // Điều hướng sau khi thành công
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
                await JS.InvokeVoidAsync("toastr.error", "Không thể thêm công nghệ dệt. Vui lòng thử lại."); // Hiển thị thông báo lỗi
            }
        }
        else
        {
            return;
        }
    }
}