@page "/admin/attribute/edit/{id:long}"
@inject IAttributesServices sev
@inject NavigationManager nav
<h3>Sửa thuộc tính </h3>

@if (isDataLoaded)
{
    <EditForm Model="attribute" OnValidSubmit="SubmitForm" FormName="sua">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group mb-3">
            <label for="attribute-title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
            <InputText id="attribute-title" class="form-control" @bind-Value="attribute.Title" required />
            <ValidationMessage For="@(() => attribute.Title)" />
        </div>

        <div class="form-group mb-3">
            <label for="attribute-slug" class="form-label">Đường dẫn</label>
            <InputText id="attribute-slug" class="form-control" @bind-Value="attribute.Slug" />
            <small class="text-gray-100">“slug” là đường dẫn thân thiện của tên. Nó thường chỉ bao gồm kí tự viết thường, số và dấu gạch ngang, không dùng tiếng Việt.</small>
        </div>

        <div class="form-group mb-3">
            <label for="attribute_parent_id" class="form-label">Chuyên mục cha</label>
            <InputSelect id="attribute_parent_id" class="form-control" @bind-Value="attribute.Parent_Id">
                <option value="">Chọn danh mục cha</option>
                @if (attributesList != null && attributesList.Any())
                {
                    @foreach (var attr in attributesList)
                    {
                        <option value="@attr.Id">@attr.Title</option>
                    }
                }
            </InputSelect>
        </div>

        <div class="form-group mb-3">
            <label for="attribute-color" class="form-label">Mã màu</label>
            <InputText id="attribute-color" class="form-control" @bind-Value="attribute.Color" />
        </div>

        <div class="form-group mb-3">
            <label for="attribute-template" class="form-label">Mẫu</label>
            <InputSelect id="attribute-template" class="form-control" @bind-Value="attribute.Template">
                <option value="default">Mặc định</option>
                <option value="color">Màu</option>
            </InputSelect>
        </div>

        <div class="form-group mb-3">
            <label for="attribute-in-order" class="form-label">Thứ tự</label>
            <InputNumber id="attribute-in-order" class="form-control" @bind-Value="attribute.In_Order" Min="0" />
        </div>

        <div class="form-group mb-3">
            <label for="attribute-description" class="form-label">Mô tả</label>
            <InputTextArea id="attribute-description" class="form-control" @bind-Value="attribute.Description" rows="3" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Sửa thuộc tính</button>
        </div>
    </EditForm>
}
else
{
    <p>Đang tải dữ liệu...</p>
}

@code {
    [Parameter]
    public Attributes attribute { get; set; } // Nhận dữ liệu từ trang Index
    [Parameter]
    public long Id { get; set; }
    private List<Attributes> attributesList = new();
    private bool isDataLoaded = false;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            // Tải dữ liệu thuộc tính cần chỉnh sửa
            attribute = await sev.GetById(Id);
            if (attribute != null)
            {
                // Nếu dữ liệu hợp lệ, đánh dấu là đã tải
                isDataLoaded = true;
            }
            else
            {
                Console.WriteLine("Không tìm thấy thuộc tính với ID này.");
            }

            // Tải danh sách các thuộc tính cha
            attributesList = await sev.GetAll();

            // Cập nhật giao diện sau khi tải
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi tải dữ liệu: {ex.Message}");
        }
    }


    private async Task SubmitForm()
    {
        await sev.Update(attribute);
        attribute = new Attributes(); // Reset lại form
        nav.NavigateTo("/admin/attribute", forceLoad: true); // Điều hướng lại về danh sách
    }
}
