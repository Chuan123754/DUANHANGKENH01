@page "/posts/create"
@inject NavigationManager Navigation
@inject IPostService PostService
@inject ICategoriesServices _categoryService;
@inject ITagsServices _tagService;
@inject IJSRuntime JS

<h1>Thêm bài viết</h1>
<form @onsubmit="CreatePost" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-8">
            <div class="card bg-white p-4 mb-4">
                <div class="text-danger mb-4">@validationSummary</div>

                <!-- Tên bài viết -->
                <div class="form-group mb-4">
                    <label for="title">Tên bài viết *</label>
                    <input type="text" @bind="post.Title" class="form-control" placeholder="Tên bài viết" />
                    <span class="text-danger">@(validationErrors.ContainsKey("Title") ? validationErrors["Title"] : "")</span>
                </div>

                <!-- Đường dẫn -->
                <div class="form-group mb-4">
                    <label for="slug">Đường dẫn *</label>
                    <input type="text" @bind="post.Slug" class="form-control" placeholder="Đường dẫn" />
                    <span class="text-danger">@(validationErrors.ContainsKey("Slug") ? validationErrors["Slug"] : "")</span>
                </div>

                <!-- Mô tả ngắn -->
                <div class="form-group mb-4">
                    <label for="content">Mô tả ngắn</label>
                    <textarea @bind="post.Content" class="form-control" rows="3"></textarea>
                    <span class="text-danger">@(validationErrors.ContainsKey("Content") ? validationErrors["Content"] : "")</span>
                </div>

                <!-- Mô tả -->
                <div class="form-group mb-4">
                    <label for="type">Mô tả</label>
                    <textarea @bind="post.Type" class="form-control" rows="10" style="font-family: system-ui; font-size: 14px;"></textarea>
                    <span class="text-danger">@(validationErrors.ContainsKey("Type") ? validationErrors["Type"] : "")</span>
                </div>

            </div>

            <!-- Phần SEO -->
            <div class="card bg-white p-4 mb-4">
                <h5>Seo</h5>

                <!-- Tiêu đề SEO -->
                <div class="form-group mb-4">
                    <label for="SelectedTagId">Tiêu đề SEO</label>
                    <input type="text" @bind="seoTitle" class="form-control" placeholder="Tiêu đề SEO" />
                    <span class="text-danger">@(validationErrors.ContainsKey("SeoTitle") ? validationErrors["SeoTitle"] : "")</span>
                </div>

                <!-- Mô tả SEO -->
                <div class="form-group mb-4">
                    <label for="SeoDescription">Mô tả</label>
                    <textarea @bind="seoDescription" class="form-control" rows="3"></textarea>
                    <span class="text-danger">@(validationErrors.ContainsKey("SeoDescription") ? validationErrors["SeoDescription"] : "")</span>
                </div>

                <!-- Từ khóa SEO -->
                <div class="form-group mb-4">
                    <label for="SeoKeywords">Keywords</label>
                    <input type="text" @bind="seoKeywords" class="form-control" placeholder="Keywords" />
                    <span class="text-danger">@(validationErrors.ContainsKey("SeoKeywords") ? validationErrors["SeoKeywords"] : "")</span>
                </div>
            </div>

        </div>

        <div class="col-md-4">
            <div class="card bg-white p-4 mb-4">
                <!-- Trạng thái -->
                <div class="form-group mb-4">
                    <label for="status">Trạng thái</label>
                    <select @bind="post.Status" class="form-control">
                        <option value="Công khai">Công khai</option>
                        <option value="Chờ duyệt">Chờ duyệt</option>
                        <option value="Nháp">Nháp</option>
                    </select>
                    <span class="text-danger">@(validationErrors.ContainsKey("Status") ? validationErrors["Status"] : "")</span>
                </div>

                <!-- Mẫu -->
                <div class="form-group mb-4">
                    <label for="postType">Mẫu</label>
                    <select @bind="post.Type" class="form-control">
                        <option value="Mẫu mặc định">Mẫu mặc định</option>
                        <option value="Nhà Thiết kế">Nhà Thiết kế</option>
                        <option value="Dự án">Dự án</option>
                        <option value="Bộ sưu tầm">Bộ sưu tầm</option>
                    </select>
                    <span class="text-danger">@(validationErrors.ContainsKey("Type") ? validationErrors["Type"] : "")</span>
                </div>

                <!-- Tác giả -->
                <div class="form-group mb-4">
                    <label for="author">Tác giả</label>
                    <input type="text" @bind="post.AuthorId" class="form-control" />
                    <span class="text-danger">@(validationErrors.ContainsKey("AuthorId") ? validationErrors["AuthorId"] : "")</span>
                </div>

                <!-- Ảnh bài viết -->
                <div class="form-group mb-4">
                    <label for="PostImage">Ảnh bài viết</label>
                    @*
                    <div class="image-upload" @onclick="()=>document.getElementById('PostImage').click()">
                    <div class="image-placeholder">
                    <img id="previewImage" src="@imagePreview" alt="Ảnh của bạn sẽ hiển thị ở đây" style="display:none; max-width: 100%;" />
                    <span id="plusIcon" class="plus-icon" style="display:block;">+</span>
                    </div>
                    </div>
                    <input type="file" class="form-control-file" id="PostImage" style="display:none;" @onchange="HandleFileSelected" />
                    *@
                </div>

                <!-- Danh mục bài viết -->
                <div class="form-group mb-4">
                    <label>Danh mục bài viết</label>
                    @foreach (var category in categories)
                    {
                        <div class="form-check">
                            <input type="checkbox" @onchange="(e) => HandleCategorySelection(e, category.Id)" class="form-check-input" />
                            <label class="form-check-label">@category.Title</label>
                        </div>
                    }
                    <span class="text-danger">@(validationErrors.ContainsKey("SelectedCategoryId") ? validationErrors["SelectedCategoryId"] : "")</span>
                </div>



                <!-- Từ khóa -->
                <div class="form-group mb-4">
                    <label>Từ khóa</label>
                    @foreach (var tag in tags)
                    {
                        <div class="form-check">
                            <input type="checkbox" @onchange="(e) => HandleTagSelection(e, tag.Id)" class="form-check-input" />
                            <label class="form-check-label">@tag.Title</label>
                        </div>
                    }
                    <span class="text-danger">@(validationErrors.ContainsKey("SelectedTagId") ? validationErrors["SelectedTagId"] : "")</span>
                </div>


                <!-- Nút đăng -->
                <div class="form-group mb-4">
                    <input type="submit" value="Đăng" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
</form>

<div>
    <button @onclick="Cancel" class="btn btn-secondary">Quay lại danh sách</button>
</div>

@code {
    private Posts post = new Posts();
    private string seoTitle, seoDescription, seoKeywords;
    private List<long> selectedCategories = new List<long>();
    private List<long> selectedTags = new List<long>();
    private string imagePreview = "#";
    private string validationSummary;
    private Dictionary<string, string> validationErrors = new Dictionary<string, string>();
    private List<Categories> categories = new List<Categories>();
    private List<Tags> tags = new List<Tags>();

    protected override async Task OnInitializedAsync()
    {
        categories = await _categoryService.GetAll();
        tags = await _tagService.GetAll();
    }

    private async Task CreatePost()
    {
        // Kiểm tra và xử lý validation nếu cần thiết
        validationErrors.Clear();

        if (string.IsNullOrWhiteSpace(post.Title))
        {
            validationErrors["Title"] = "Tiêu đề là bắt buộc.";
        }

        if (string.IsNullOrWhiteSpace(post.Slug))
        {
            validationErrors["Slug"] = "Đường dẫn là bắt buộc.";
        }

        if (string.IsNullOrWhiteSpace(post.Content))
        {
            validationErrors["Content"] = "Mô tả ngắn là bắt buộc.";
        }

        if (validationErrors.Any())
        {
            validationSummary = "Vui lòng kiểm tra lại các trường bắt buộc.";
            return; // Dừng lại nếu có lỗi validation
        }

        // Gán các danh mục và từ khóa đã chọn vào post
        post.SelectedCategoryId = selectedCategories;
        post.SelectedTagId = selectedTags;

        try
        {
            // Gửi dữ liệu bài viết lên API để tạo mới
            await PostService.Create(post);

            // Điều hướng quay lại trang danh sách bài viết sau khi tạo thành công
            Navigation.NavigateTo("/admin/posts");
        }
        catch (Exception ex)
        {
            // Xử lý lỗi nếu có, ví dụ ghi log hoặc hiển thị thông báo lỗi
            validationSummary = "Có lỗi xảy ra khi tạo bài viết: " + ex.Message;
        }
    }

    private void HandleCategorySelection(ChangeEventArgs e, long categoryId)
    {
        bool isChecked = ((bool)e.Value); // Kiểm tra trạng thái checkbox (đã chọn hoặc bỏ chọn)

        if (isChecked)
        {
            if (!selectedCategories.Contains(categoryId))
                selectedCategories.Add(categoryId);
        }
        else
        {
            if (selectedCategories.Contains(categoryId))
                selectedCategories.Remove(categoryId);
        }
    }


    private void HandleTagSelection(ChangeEventArgs e, long tagId)
    {
        bool isChecked = ((bool)e.Value); // Kiểm tra trạng thái checkbox

        if (isChecked)
        {
            if (!selectedTags.Contains(tagId))
                selectedTags.Add(tagId);
        }
        else
        {
            if (selectedTags.Contains(tagId))
                selectedTags.Remove(tagId);
        }
    }


    private void Cancel()
    {
        Navigation.NavigateTo("/admin/posts");
    }
}
