@layout AdminLayout
@page "/admin/project/create"
@inject NavigationManager nav
@inject IPostSer sev
@inject ITagsServices stag
@inject ICategoriesServices cate
@inject IDesignerServices des
@inject IJSRuntime JS

<EditForm Model="Posts" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="page-wrapper">
        <div class="page-header d-print-none">
            <div class="container-xl">
                <div class="row g-2 align-items-center">
                    <div class="col">
                        <h2 class="page-title">Thêm dự án</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="page-body">
            <div class="container-xl">
                <div class="row">
                    <div class="col-md-9 col-12">
                        <div class="card">
                            <div class="card-body">
                                <!-- Tên dự án -->
                                <div class="mb-3">
                                    <label for="title" class="form-label">Tên dự án</label>
                                    <InputText id="title" class="form-control" @bind-Value="Posts.Title" placeholder="Tên dự án" required />
                                    <div id="title_error" class="validate-error"></div>
                                </div>

                                <!-- Đường dẫn -->
                                <div class="mb-3">
                                    <label for="seoSlug" class="form-label">Đường dẫn</label>
                                    <InputText id="seoSlug" class="form-control" @bind-Value="Posts.Slug" />
                                </div>

                                <!-- Mô tả ngắn -->
                                <div class="mb-3">
                                    <label for="shortDescription" class="form-label">Mô tả ngắn</label>
                                    <InputTextArea id="shortDescription" class="form-control" rows="3" @bind-Value="Posts.Short_description" />
                                </div>

                                <!-- Mô tả -->
                                <div class="mb-3">
                                    <label for="tinymce-textarea" class="form-label">Mô tả</label>
                                    <InputTextArea @bind-Value="Posts.Description" class="form-control" id="tinymce-textarea" rows="7" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Sidebar bên phải -->
                    <div class="col-md-3 col-12">
                        <div class="sticky-top position-sticky">
                            <!-- Accordion cho trạng thái đăng -->
                            <div class="accordion bg-white mb-3 mt-3 mt-md-0">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button " type="button" data-bs-toggle="collapse"
                                                data-bs-target="#action-1" aria-expanded="true">
                                            Đăng
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="action-1">
                                        <div class="accordion-body pt-0">
                                            <!-- Trạng thái -->
                                            <div class="form-group mb-3">
                                                <label class="form-label">Trạng thái</label>
                                                <select @bind="Posts.Status" class="form-control">
                                                    @foreach (var status in statuses)
                                                    {
                                                        <option value="@status.Key" selected="@(Posts.Status == status.Key)">
                                                            @status.Value
                                                        </option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label class="form-label">Tác giả</label>
                                                <InputSelect @bind-Value="Posts.AuthorId" class="form-control" multiple>
                                                    @foreach (var desi in designersList)
                                                    {
                                                        <option value="@desi.id_Designer">@desi.Name</option>
                                                    }
                                                </InputSelect>
                                            </div>
                                            <!-- Nút Đăng -->
                                            <button type="submit" class="btn btn-primary" style="float: right">
                                                Đăng
                                            </button>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Danh mục bài viết -->
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button " type="button" data-bs-toggle="collapse"
                                                data-bs-target="#category" aria-expanded="true">
                                            Danh mục dự án
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="category">
                                        <div class="accordion-body pt-0">
                                            <div class="form-group">
                                                <select id="categories" class="form-control" placeholder="Chọn danh mục" multiple>
                                                    @foreach (var cate in CategoriesList)
                                                    {
                                                        <option value="@cate.Id"  selected="@SelectedCategories.Contains(cate.Id)">@cate.Title</option>
                                                    }
                                                </select>
                                                <div id="category_ids_error" class="validate-error"></div>
                                                <a href="javascript:void(0)" id="add_category"
                                                   class="mt-2 mb-2 d-block d-flex gap-1">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                         class="icon icon-tabler icon-tabler-plus" width="10"
                                                         height="10" viewBox="0 0 26 26" stroke-width="1"
                                                         stroke="currentColor" fill="none" stroke-linecap="round"
                                                         stroke-linejoin="round">
                                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                        <path d="M12 5l0 14" />
                                                        <path d="M5 12l14 0" />
                                                    </svg>
                                                    <span> Thêm danh mục</span>
                                                </a>
                                                <div class="category-add mt-2 d-none">
                                                    <div class="form-group mb-2">
                                                        <label for="category_title" class="form-label">
                                                            Tiêu
                                                            đề
                                                        </label>
                                                        <input id="category_title" type="text"
                                                               class="form-control" placeholder="Nhập tên danh mục">
                                                    </div>
                                                    <div class="form-group mb-2">
                                                        <label for="category_parent_id" class="form-label">
                                                            Danh mục
                                                            cha
                                                        </label>
                                                        <select id="category_parent_id"
                                                                class="form-control">
                                                            <option value="">Chọn danh mục cha</option>
                                                        </select>
                                                    </div>
                                                    <div class="form-group">
                                                        <button type="button" id="save_category"
                                                                data-action="{{ route('admin.api.categories.store') }}"
                                                                class="btn btn-primary">
                                                            Lưu
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Từ khóa -->
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#tag" aria-expanded="true">Từ khóa</button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="tag">
                                        <div class="accordion-body pt-0">
                                            <div class="form-group mb-3">
                                                <select id="tags-selects" multiple class="form-control" placeholder="Nhập từ khoá">
                                                    @foreach (var tag in TagsList)
                                                    {
                                                        <option value="@tag.Id" selected="@SelectedTags.Contains(tag.Id)">@tag.Title</option>
                                                    }
                                                </select>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private Product_Posts Posts = new Product_Posts();
    private List<Categories> CategoriesList = new();
    private Dictionary<string, string> statuses = Product_Posts.STATUSES;
    private List<Designer> designersList = new List<Designer>();
    private List<Tags> TagsList = new();
    private string FeatureImage { get; set; }
    private List<long> SelectedCategories = new List<long>();
    private List<long> SelectedTags = new List<long>();

    protected override async Task OnInitializedAsync()
    {
        // Tải danh sách tags và categories
        TagsList = await stag.GetAll();
        CategoriesList = await cate.GetAll();
        designersList = await des.GetAll();
        Posts.Status = Product_Posts.STATUS_DRAFT;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Khởi tạo TinyMCE
            await JS.InvokeVoidAsync("initTinyMCE");
        }
        if (TagsList?.Count > 0)
        {
            await JS.InvokeVoidAsync("initializeTagsList", TagsList);
            await JS.InvokeVoidAsync("initializeTomSelect", "#tags-selects");
        }

        if (CategoriesList?.Count > 0)
        {
            await JS.InvokeVoidAsync("initializeCateList", CategoriesList);
            await JS.InvokeVoidAsync("initializeTomSelectForCategories", "#categories");
        }
    }
    private async Task OnTagsChange(ChangeEventArgs e)
    {
        var selectedValues = e.Value.ToString().Split(','); // Tách các giá trị được chọn
        SelectedTags.Clear(); // Xóa danh sách hiện tại

        foreach (var value in selectedValues)
        {
            if (long.TryParse(value, out long id))
            {
                SelectedTags.Add(id); // Thêm id vào danh sách
            }
            else
            {
                // Nếu không phải là id, có thể là tag mới
                var newTagTitle = value.Trim();
                if (!TagsList.Any(tag => tag.Title.Equals(newTagTitle, StringComparison.OrdinalIgnoreCase)))
                {
                    // Thêm tag mới vào danh sách và cơ sở dữ liệu nếu cần
                    var newTag = new Tags { Title = newTagTitle };
                    await stag.Create(newTag); // Gọi API để lưu tag mới vào cơ sở dữ liệu

                    TagsList = await stag.GetAll();
                    // Tìm lại tag vừa được thêm và thêm nó vào SelectedTags
                    var addedTag = TagsList.FirstOrDefault(t => t.Title.Equals(newTagTitle, StringComparison.OrdinalIgnoreCase));
                    if (addedTag != null)
                    {
                        SelectedTags.Add(addedTag.Id);
                    }
                }
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        Posts.Description = await JS.InvokeAsync<string>("getTinyMCEContent");

        // Lấy dữ liệu từ Tom Select
        var tags = await JS.InvokeAsync<string>("getSelectedValues", "#tags-selects");
        if (!string.IsNullOrEmpty(tags))
        {
            SelectedTags = tags.Split(',')
                .Select(id => long.TryParse(id, out long result) ? result : 0)
                .Where(id => id > 0)
                .ToList();
        }

        var categories = await JS.InvokeAsync<string>("getSelectedValues", "#categories");
        if (!string.IsNullOrEmpty(categories))
        {
            SelectedCategories = categories.Split(',')
                .Select(id => long.TryParse(id, out long result) ? result : 0)
                .Where(id => id > 0)
                .ToList();
        }

        await sev.CreateProject(Posts, SelectedTags, SelectedCategories);
        nav.NavigateTo("/admin/project");
    }
}
<script>
    function initTinyMCE() {
        tinymce.init({
            selector: '#tinymce-textarea',
            plugins: 'link image code',
            toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'
        });
    }

    function getTinyMCEContent() {
        return tinymce.get('tinymce-textarea').getContent();
    }


    window.TagsList = [];
    window.CategoriesList = [];
    function initializeTagsList(tags) {
        if (tags && tags.length > 0) {
            window.TagsList = tags;
            console.log('TagsList initialized:', window.TagsList);
        } else {
            console.log('Failed to initialize TagsList. Empty or undefined.');
        }
    }
    function initializeCateList(cate) {
        if (cate && cate.length > 0) {
            window.CategoriesList = cate;
            console.log('cate initialized:', window.CategoriesList);
        } else {
            console.log('Failed to initialize TagsList. Empty or undefined.');
        }
    }

    function resetTomSelect(selector) {
        const element = document.querySelector(selector);
        if (element && element.tomselect) {
            element.tomselect.destroy(); // Hủy bỏ instance hiện tại
        }
    }

    function initializeTomSelect(selector) {
        resetTomSelect(selector); // Đảm bảo reset trước khi khởi tạo mới

        const element = document.querySelector(selector);
        if (element) {
            new TomSelect(selector, {
                create: true, // Cho phép thêm mới cho từ khóa
                persist: false,
                hideSelected: true,
                closeAfterSelect: true,
                delimiter: ',',
                plugins: ['remove_button'],
                sortField: {
                    field: 'text',
                    direction: 'asc'
                },
                searchField: ['text'],
                maxOptions: null,
                preload: false, // Đặt thành false để chỉ tải kết quả khi người dùng tìm kiếm
                load: function (query, callback) {
                    if (!window.TagsList || window.TagsList.length === 0) {
                        console.log('TagsList is empty or undefined.');
                        return callback();
                    }

                    // Chỉ hiển thị khi có nội dung được nhập
                    if (query.length > 0) {
                        const results = window.TagsList.filter(tag =>
                            tag?.title?.toLowerCase().includes(query.toLowerCase())
                        );

                        callback(results.map(tag => ({ value: tag.id, text: tag.title })));
                    } else {
                        callback(); // Không trả về kết quả nếu không có query
                    }
                }
            });
        }
    }

    function initializeTomSelectForCategories(selector) {
        resetTomSelect(selector); // Đảm bảo reset trước khi khởi tạo mới

        const element = document.querySelector(selector);
        if (element) {
            new TomSelect(selector, {
                create: false,
                persist: false,
                hideSelected: true,
                closeAfterSelect: false,
                delimiter: ',',
                plugins: ['remove_button'],
                sortField: {
                    field: 'text',
                    direction: 'asc'
                },
                searchField: ['text'],
                maxOptions: null,
                preload: true,
                load: function (query, callback) {
                    const results = query ?
                        window.CategoriesList.filter(cate => cate?.title?.toLowerCase().includes(query.toLowerCase())) :
                        window.CategoriesList;

                    callback(results.map(cate => ({ value: cate.id, text: cate.title })));
                }
            });
        }
    }
    function getSelectedValues(selector) {
        const element = document.querySelector(selector);
        if (element && element.tomselect) {
            return element.tomselect.getValue().join(','); // Chuyển đổi mảng thành chuỗi
        }
        return '';
    }
</script>