@page "/admin/project/create"
@inject NavigationManager nav
@inject IPostSer sev
@inject ITagsServices stag
@inject ICategoriesServices cate
@inject IDesignerServices des
@inject IBannerServices bnser
@inject IJSRuntime JS
@using BlazorBootstrap
<EditForm Model="Posts" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="page-wrapper">
        <div class="page-header d-print-none">
            <div class="container-xl">
                <div class="row g-2 align-items-center">
                    <div class="col">
                        <h2 class="page-title">Thêm dự án</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="page-body">
            <div class="container-xl">
                <div class="row">
                    <div class="col-md-9 col-12">
                        <div class="card">
                            <div class="card-body">
                                <!-- Tên dự án -->
                                <div class="mb-3">
                                    <label for="title" class="form-label">Tên dự án<span class="text-danger">*</span></label>
                                    <InputText id="title" class="form-control" @bind-Value="Posts.Title" placeholder="Tên dự án" @oninput="GenerateSlug" />
                                    <ValidationMessage For="@(() => Posts.Title)" />
                                </div>

                                <!-- Đường dẫn -->
                                <div class="mb-3">
                                    <label for="seoSlug" class="form-label">Đường dẫn<span class="text-danger">*</span></label>
                                    <InputText id="seoSlug" class="form-control" @bind-Value="Posts.Slug" />
                                    <ValidationMessage For="@(() => Posts.Slug)" />
                                </div>

                                <!-- Mô tả ngắn -->
                                <div class="mb-3">
                                    <label for="shortDescription" class="form-label">Mô tả ngắn</label>
                                    <InputTextArea id="shortDescription" class="form-control" rows="3" @bind-Value="Posts.Short_description" />
                                </div>

                                <!-- Mô tả -->
                                <div class="mb-3">
                                    <label for="tinymce-textarea" class="form-label">Mô tả</label>
                                    <textarea id="tinymce-textarea" @bind="Posts.Description" class="form-control" rows="7"></textarea>
                                </div>
                            </div>
                        </div>
                        @*  Banner *@
                        <div class="accordion bg-white mt-3">
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                            data-bs-target="#banner_block" aria-expanded="true">
                                        Cấu hình banner<span class="text-danger">*</span>
                                    </button>
                                </h2>
                                <div id="banner_block" class="accordion-collapse collapse show">
                                    <div class="card-body pb-4 px-4" style="height: 300px">
                                        <div class="mb-3">
                                            <label for="title" class="form-label">Tiêu đề<span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" @bind-value="banner.Name"
                                                   placeholder="Tiêu đề">
                                        </div>
                                        <div>

                                            <div id="banner_image"
                                                 class="image-post-box d-flex align-items-center justify-content-center open-media-modal"
                                                 data-multiple="false"
                                                 data-refer-id="#banner_image" onclick="openMediaBannerModal()">
                                                @if (!string.IsNullOrEmpty(banner.Meta_data))
                                                {
                                                    <img src="@banner.Meta_data" class="object-cover" />
                                                }
                                                else
                                                {
                                                    <div class="icon d-flex align-items-center justify-content-center">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" stroke-width="1"
                                                             stroke="currentColor" fill="none" stroke-linecap="round"
                                                             stroke-linejoin="round">
                                                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                            <path d="M12 5l0 14" />
                                                            <path d="M5 12l14 0" />
                                                        </svg>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*    End banner *@
                    </div>

                    <!-- Sidebar bên phải -->
                    <div class="col-md-3 col-12">
                        <div class="sticky-top position-sticky">
                            <!-- Accordion cho trạng thái đăng -->
                            <div class="accordion bg-white mb-3 mt-3 mt-md-0">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button " type="button" data-bs-toggle="collapse"
                                                data-bs-target="#action-1" aria-expanded="true">
                                            Khởi tạo
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="action-1">
                                        <div class="accordion-body pt-0">
                                            <!-- Trạng thái -->
                                            <div class="form-group mb-3">
                                                <label class="form-label">Trạng thái<span class="text-danger">*</span></label>
                                                <select @bind="Posts.Status" class="form-control">
                                                    @foreach (var status in statuses)
                                                    {
                                                        <option value="@status.Key" selected="@(Posts.Status == status.Key)">
                                                            @status.Value
                                                        </option>
                                                    }
                                                    <ValidationMessage For="@(() => Posts.Status)" />
                                                </select>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label class="form-label">Nhà thiết kế<span class="text-danger">*</span></label>
                                                <select @bind="Posts.AuthorId" class="form-control">
                                                    @foreach (var desi in designersList)
                                                    {
                                                        <option value="@desi.id_Designer">@desi.Name</option>
                                                    }
                                                </select>
                                            </div>
                                            <!-- Nút Đăng -->
                                            <button type="submit" class="btn btn-primary" style="float: right">
                                                Tạo dự án
                                            </button>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- #region ảnh đại diện -->
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#category" aria-expanded="true">
                                            Ảnh đại diện
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" data-bs-parent="#accordion-example">
                                        <div class="accordion-body pt-0">
                                            <div id="feature_image" class="image-post-box d-flex align-items-center justify-content-center"
                                                 data-multiple="false" data-refer-id="#feature_image" onclick="openMediaModal()">
                                                @if (!string.IsNullOrEmpty(Posts.Feature_image))
                                                {
                                                    <img src="@Posts.Feature_image" class="w-100 h-100 object-cover" />
                                                }
                                                else
                                                {
                                                    <div class="icon d-flex align-items-center justify-content-center">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" stroke-width="1" stroke="currentColor" fill="none">
                                                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                            <path d="M12 5v14" />
                                                            <path d="M5 12h14" />
                                                        </svg>
                                                    </div>
                                                }
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- #endregion -->
                            <!--Thư viện ảnh sản phẩm-->
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#imageLibrary" aria-expanded="true">
                                            Thư viện ảnh dự án
                                        </button>
                                    </h2>
                                    <div id="imageLibrary" class="accordion-collapse collapse show">
                                        <div class="accordion-body pt-0">
                                            <div class="image-box-libs">
                                                <div id="image_library" class="image-libs d-grid gap-2 align-items-center">
                                                    @if (!string.IsNullOrEmpty(Posts.Image_library))
                                                    {
                                                        foreach (var img in Posts.Image_library.Split(','))
                                                        {
                                                            <div class="image-item">
                                                                <img src="@img" class="w-100 h-100 object-cover" />
                                                            </div>
                                                        }
                                                    }
                                                    <div class="image-post-box d-flex align-items-center justify-content-center"
                                                         @onclick='() => OpenMediaModalN(true, "image_library")'>
                                                        <div class="icon d-flex align-items-center justify-content-center">
                                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" stroke-width="1" stroke="currentColor" fill="none">
                                                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                                <path d="M12 5v14" />
                                                                <path d="M5 12h14" />
                                                            </svg>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Danh mục bài viết -->
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button " type="button" data-bs-toggle="collapse"
                                                data-bs-target="#category" aria-expanded="true">
                                            Danh mục dự án
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="category">
                                        <div class="accordion-body pt-0">
                                            <div class="form-group">
                                                <select id="categories" class="form-control" placeholder="Chọn danh mục" multiple>
                                                    @foreach (var cate in CategoriesList)
                                                    {
                                                        <option value="@cate.Id" selected="@SelectedCategories.Contains(cate.Id)">@cate.Title</option>
                                                    }
                                                </select>
                                                <div id="category_ids_error" class="validate-error"></div>
                                                <a @onclick="OnShowModalClick"
                                                   class="mt-2 mb-2 d-block d-flex gap-1">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                         class="icon icon-tabler icon-tabler-plus" width="10"
                                                         height="10" viewBox="0 0 26 26" stroke-width="1"
                                                         stroke="currentColor" fill="none" stroke-linecap="round"
                                                         stroke-linejoin="round">
                                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                        <path d="M12 5l0 14" />
                                                        <path d="M5 12l14 0" />
                                                    </svg>
                                                    <span> Thêm danh mục</span>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Từ khóa -->
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#tag" aria-expanded="true">Từ khóa</button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="tag">
                                        <div class="accordion-body pt-0">
                                            <div class="form-group mb-3">
                                                <select id="tags-selects" multiple class="form-control" placeholder="Nhập từ khoá">
                                                    @foreach (var tag in TagsList)
                                                    {
                                                        <option value="@tag.Id" selected="@SelectedTags.Contains(tag.Id)">@tag.Title</option>
                                                    }
                                                </select>
                                                <a @onclick="OnShowModalClickTags"
                                                   class="mt-2 mb-2 d-block d-flex gap-1">
                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                         class="icon icon-tabler icon-tabler-plus" width="10"
                                                         height="10" viewBox="0 0 26 26" stroke-width="1"
                                                         stroke="currentColor" fill="none" stroke-linecap="round"
                                                         stroke-linejoin="round">
                                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                        <path d="M12 5l0 14" />
                                                        <path d="M5 12l14 0" />
                                                    </svg>
                                                    <span> Thêm từ khoá</span>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>


<Media_modal OnImageSelected="HandleImageSelected" @ref="mediaModalRef"></Media_modal>
<Media_manager OnImageSelected="HandleImageSelectedBanner" @ref="media_ManagerRef"></Media_manager>
<Modal_NImg OnImagesSelectedN="HandleImageSelectedN" @ref="mediaLibraryModal"></Modal_NImg>
<Modal @ref="modalcate" title="Thêm chuyên mục" IsVerticallyCentered="true">
    <BodyTemplate>
        <div class="category-add mt-2">
            <div class="form-group mb-2">
                <label for="categories-short-title" class="form-label">
                    Tiêu
                    đề ngắn <span class="text-danger">*</span>
                </label>
                <input id="categories-short-title" type="text"
                       class="form-control" @bind="categories.Short_title" placeholder="Nhập tên ngắn danh mục">
            </div>
            <div class="form-group mb-2">
                <label for="category_title" class="form-label">
                    Tiêu
                    đề
                    <span class="text-danger">*</span>
                </label>
                <input id="category_title" type="text"
                       class="form-control" @bind="categories.Title" placeholder="Nhập tên danh mục" @oninput="GenerateSlugCate">

            </div>
            <div class="form-group mb-3">
                <label for="categories-slug" class="form-label">Đường dẫn</label>
                <input id="categories-slug" class="form-control" @bind="categories.Slug" />
                <small class="text-gray-100">“slug” là đường dẫn thân thiện của tên. Nó thường chỉ bao gồm kí tự viết thường, số và dấu gạch ngang, không dùng tiếng Việt.</small>
            </div>
            <div class="form-group mb-3">
                <label for="categories-description" class="form-label">Mô tả</label>
                <textarea id="categories-description" class="form-control" @bind="categories.Description" rows="3" />
            </div>
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <Button class="btn btn-outline-secondary" @onclick="OnHideModalClick">Close</Button>
        <Button class="btn btn-outline-primary" @onclick="SumbitCate">Tạo chuyên mục</Button>
    </FooterTemplate>
</Modal>
<Modal @ref="modaltags" title="Thêm thẻ tags" IsVerticallyCentered="true">
    <BodyTemplate>
        <div class="category-add mt-2">
            <div class="form-group mb-2">
                <label for="category_title" class="form-label">
                    Tiêu
                    đề
                    <span class="text-danger">*</span>
                </label>
                <input id="category_title" type="text"
                       class="form-control" @bind="tags.Title" placeholder="Nhập tên tags">

            </div>
            <div class="form-group mb-3">
                <label for="categories-description" class="form-label">Mô tả</label>
                <textarea id="categories-description" class="form-control" @bind="tags.Description" rows="3" />
            </div>
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <Button class="btn btn-outline-secondary" @onclick="OnHideModalClickTags">Close</Button>
        <Button class="btn btn-outline-primary" @onclick="SumbitTag">Tạo thẻ tags</Button>
    </FooterTemplate>
</Modal>
@code {
    private Product_Posts Posts = new Product_Posts();
    private Banner banner = new Banner();
    private Categories categories = new Categories();
    private Tags tags = new Tags();
    private List<Categories> CategoriesList = new List<Categories>();
    private Dictionary<string, string> statuses = Product_Posts.STATUSES;
    private List<Designer> designersList = new List<Designer>();
    private List<Tags> TagsList = new();
    private List<long> SelectedCategories = new List<long>();
    private List<long> SelectedTags = new List<long>();
    private bool tinyMCEInitialized = false;
    private Media_modal mediaModalRef;
    private Modal_NImg mediaLibraryModal;
    private Media_manager media_ManagerRef;
    private long postId;

    private Modal modalcate = default!;
    private Modal modaltags = default!;

    private async Task OnShowModalClick()
    {
        await modalcate.ShowAsync();
    }
    private async Task OnShowModalClickTags()
    {
        await modaltags.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modalcate.HideAsync();
    }
    private async Task OnHideModalClickTags()
    {
        await modaltags.HideAsync();
    }
    private async void SumbitCate()
    {
        try
        {
            await cate.CreateTypeProject(categories);
            await JS.InvokeVoidAsync("toastr.success", "Thêm danh mục thành công");
            await LoadPosts();
            await modalcate.HideAsync();

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            await JS.InvokeVoidAsync("toastr.error", "Không thể thêm danh mục. Vui lòng thử lại.");
        }
    }
    private async void SumbitTag()
    {
        try
        {
            await stag.Create(tags);
            await JS.InvokeVoidAsync("toastr.success", "Thêm tags thành công");
            await LoadPosts();
            await modaltags.HideAsync();

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            await JS.InvokeVoidAsync("toastr.error", "Không thể thêm tags. Vui lòng thử lại.");
        }
    }
    private async Task HandleImageSelectedN(List<string> imagePaths)
    {
        Posts.Image_library = string.Join(",", imagePaths);
        // StateHasChanged();
        await JS.InvokeVoidAsync("openMediaModalN");
    }

    private async Task HandleImageSelected(string imagePath)
    {
        // Nếu imagePath là null, xóa ảnh đại diện
        Posts.Feature_image = imagePath ?? string.Empty;
        //StateHasChanged();
        await JS.InvokeVoidAsync("closeMediaModal");
    }
    private async Task HandleImageSelectedBanner(string imagePath)
    {
        // Nếu imagePath là null, xóa ảnh banner
        banner.Meta_data = imagePath ?? string.Empty;
        //  StateHasChanged();
        await JS.InvokeVoidAsync("closeMediaBannerModal");
    }
    private async Task OpenMediaModalN(bool isMultiple, string referId)
    {
        await JS.InvokeVoidAsync("openMediaModalN", isMultiple, referId);
    }
    private async Task LoadPosts()
    {

     
        // Tải danh sách tags và categories
        TagsList = await stag.GetAll();
        CategoriesList = await cate.GetAllType("project");
     
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        statuses = Product_Posts.STATUSES.ToDictionary(k => k.Key, v => v.Value);
        Posts = new Product_Posts
            {
                Status = Product_Posts.STATUS_PUBLISH // Thiết lập giá trị mặc định
            };
        designersList = await des.GetAll();
        if (designersList != null && designersList.Any())
        {
            Posts.AuthorId = designersList.First().id_Designer;
        }
        await LoadPosts();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (!tinyMCEInitialized)
            {
                await JS.InvokeVoidAsync("initTinyMCE");
                tinyMCEInitialized = true;
            }
        }
        if (TagsList?.Count > 0)
        {
            await JS.InvokeVoidAsync("initializeTagsList", TagsList);
            await JS.InvokeVoidAsync("initializeTomSelect", "#tags-selects");
        }

        if (CategoriesList?.Count > 0)
        {
            await JS.InvokeVoidAsync("initializeCateList", CategoriesList);
            await JS.InvokeVoidAsync("initializeTomSelectForCategories", "#categories");
        }
    }
    public async ValueTask DisposeAsync()
    {
        if (tinyMCEInitialized)
        {
            await JS.InvokeVoidAsync("tinymce.remove", "#tinymce-textarea");
        }
    }
    private void GenerateSlug(ChangeEventArgs e)
    {
        if (e.Value is string title && !string.IsNullOrWhiteSpace(title))
        {
            Posts.Slug = CreateSlug(title);
        }
    }

    private void GenerateSlugCate(ChangeEventArgs e)
    {
        if (e.Value is string title && !string.IsNullOrWhiteSpace(title))
        {
            categories.Slug = CreateSlug(title);
        }
    }
    private string CreateSlug(string input)
    {
        // Chuyển sang chữ thường
        string result = input.ToLowerInvariant();

        // Loại bỏ dấu tiếng Việt
        result = RemoveDiacritics(result);

        // Loại bỏ ký tự không phải chữ/số và thay thế khoảng trắng bằng dấu gạch ngang
        result = System.Text.RegularExpressions.Regex.Replace(result, @"[^a-z0-9\s-]", "");
        result = System.Text.RegularExpressions.Regex.Replace(result, @"\s+", "-").Trim('-');

        return result;
    }

    private string RemoveDiacritics(string text)
    {
        var normalized = text.Normalize(System.Text.NormalizationForm.FormD);
        var stringBuilder = new System.Text.StringBuilder();
        foreach (var c in normalized)
        {
            var unicodeCategory = System.Globalization.CharUnicodeInfo.GetUnicodeCategory(c);
            if (unicodeCategory != System.Globalization.UnicodeCategory.NonSpacingMark)
            {
                stringBuilder.Append(c);
            }
        }
        return stringBuilder.ToString().Normalize(System.Text.NormalizationForm.FormC);
    }
    private async Task HandleValidSubmit()
    {
        Posts.Description = await JS.InvokeAsync<string>("getTinyMCEContent");
        var tags = await JS.InvokeAsync<string>("getSelectedValues", "#tags-selects");
        if (!string.IsNullOrEmpty(tags))
        {
            SelectedTags = tags.Split(',')
                .Select(id => long.TryParse(id, out long result) ? result : 0)
                .Where(id => id > 0)
                .ToList();
        }

        var categories = await JS.InvokeAsync<string>("getSelectedValues", "#categories");
        if (!string.IsNullOrEmpty(categories))
        {
            SelectedCategories = categories.Split(',')
                .Select(id => long.TryParse(id, out long result) ? result : 0)
                .Where(id => id > 0)
                .ToList();
        }
        try
        {
            postId = await sev.CreateProject(Posts, SelectedTags, SelectedCategories);
            banner.Type = "project";
            await bnser.AddBannerToPost(postId, banner);
            await JS.InvokeVoidAsync("toastr.success", "Thêm dự án thành công");
            nav.NavigateTo("/admin/project");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            await JS.InvokeVoidAsync("toastr.error", "Không thể thêm dự án. Vui lòng thử lại.");
        }
    }
}