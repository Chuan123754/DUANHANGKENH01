@page "/admin/designer"
@inject HttpClient Http
@inject IDesignerServices sev
@inject IJSRuntime JSRuntime

<PageTitle>Danh sách nhà thiết kế</PageTitle>

<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col d-flex gap-3">
                    <h2 class="page-title">Danh sách nhà thiết kế</h2>
                    <NavLink class="btn btn-sm btn-outline-primary" href="/admin/designer/create">Thêm nhà thiết kế</NavLink>
                </div>
            </div>
        </div>
    </div>

    <!-- Page body -->
    <div class="page-body">
        <div class="container-xl">
            <div class="card">
                <div class="card-body">
                    <div class="search-box d-flex align-items-center justify-content-between mb-3">
                        <div></div>
                        <EditForm Model="designer" OnValidSubmit="@OnSearch">
                            <DataAnnotationsValidator />
                            <div class="form-group d-flex gap-2">
                                <InputText id="searchInput" class="form-control" @bind-Value="searchQuery" placeholder="Nhập từ khóa tìm kiếm" />
                                <button type="submit" class="btn btn-outline-primary">Tìm kiếm</button>
                            </div>
                        </EditForm>
                    </div>

                    <div id="table-default" class="table-responsive">
                        @if (designersList != null && designersList.Count > 0)
                        {
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>
                                            <button class="table-sort" data-sort="sort-title">Ảnh</button>
                                        </th>
                                        <th>
                                            <button class="table-sort" data-sort="sort-title">Tên nhà thiết kế</button>
                                        </th>
                                        <th>
                                            <button class="table-sort" data-sort="sort-score">Đường dẫn</button>
                                        </th>
                                        <th>
                                            <button class="table-sort" data-sort="sort-score">Trạng thái</button>
                                        </th>
                                        <th>
                                            <button class="table-sort" data-sort="sort-date">Thời gian</button>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in designersList)
                                    {
                                        <tr>
                                            <td>@item.id_Designer</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.image?.FirstOrDefault().ToString()))
                                                {
                                                    <a href="@item.image.FirstOrDefault().ToString()" target="_blank">
                                                        <img src="@item.image.FirstOrDefault().ToString()" width="80" height="80" alt="" />
                                                    </a>
                                                }

                                            </td>
                                            <td class="sort-title">
                                                <a href="@($"/admin/designer/design-list/{item.id_Designer}")">@item.Name</a>
                                                <button class="btn btn-sm btn-outline-danger" @onclick="() => ConfirmDelete(item.id_Designer)">Xóa</button>
                                            </td>
                                            <td class="sort-city">@item.slug</td>
                                            <td class="sort-status @item.StatusClass">@item.StatusLabel</td>
                                            <td class="sort-date">@item.create_at.ToString("g")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="text-center">Không có dữ liệu</p>
                        }
                    </div>

                    @if (loading)
                    {
                        <div class="loading d-flex align-items-center justify-content-center" style="min-height: 100px;">
                            <div class="spinner-border"></div>
                        </div>
                    }

                    @if (message != null)
                    {
                        <div class="alert alert-success">@message</div>
                    }

                    @if (designersList != null && designersList.Count > 0)
                    {
                        <div class="mt-4">
                         @*   code phân trang *@
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Designer> designersList;
    private Designer designer = new Designer();
    private string searchQuery = string.Empty;
    private string message;
    private bool loading;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task Search()
    {

    }

    private async Task ConfirmDelete(long id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Bạn muốn xóa bản ghi này?");
        if (confirmed)
        {
            await sev.Delete(id); // Đảm bảo rằng phương thức trả về HttpResponseMessage
        }
    }
    protected async Task OnSearch()
    {
        designersList = await sev.Search(searchQuery); // Thực hiện tìm kiếm với từ khóa
    }
}
