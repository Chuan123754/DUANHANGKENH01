@page "/admin/sell"
@inject NavigationManager nav
@inject IUserService userService
@inject IAddressServices addressService
@inject OrderIServices orderService
@inject OrderDetailsIServices orderDetailService
@inject IProductAttributeServices productAttributeService
@inject IProductVariantServices productVariantService
@inject IJSRuntime JS

<style>
    .custom-modal-size {
        max-width: 200%;
    }

    .modal-dialog-scrollable {
        max-height: 80vh;
        overflow-y: auto;
    }

    .table {
        width: 100%;
        table-layout: auto;
    }

    .border {
        border-width: 2px;
        border-color: #007bff;
    }
</style>
<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <h2 class="page-title">
                        SELLING
                    </h2>
                </div>
                <div class="col-auto ms-auto d-print-none">
                    <div class="btn-list">
                        <button class="btn btn-primary d-none d-sm-inline-block" @onclick="CreateOrder">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <path d="M12 5l0 14" />
                                <path d="M5 12l14 0" />
                            </svg>
                            Tạo hóa đơn
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Page body -->
    <div class="page-body">
        <div class="container-xl">
            <div class="row row-deck row-cards">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h2 class="card-title">MÃ HÓA ĐƠN :  @selectedOrderId</h2>
                            <!-- Nút thêm sản phẩm -->
                            <button class="btn btn-secondary" @onclick="ShowAddProductModal">
                                Thêm sản phẩm
                            </button>
                        </div>
                        @if (isAddProductModalVisible)
                        {
                            <div class="modal fade show d-block" tabindex="-1" role="dialog">
                                <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 75%; width: auto;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Thêm Sản Phẩm</h5>
                                            <button type="button" class="btn-close" @onclick="CloseAddProductModal" aria-label="Close"></button>
                                        </div>
                                        <div class="search-box d-flex align-items-center justify-content-between mb-3">
                                            <div></div>
                                            <EditForm Model="product_Attributes" OnValidSubmit="@OnSearch">
                                                <div class="form-group d-flex gap-2">
                                                    <InputText id="search_input" class="form-control" @bind-Value="search_query" placeholder="Nhập từ khóa tìm kiếm" />
                                                    <button type="submit" class="btn btn-outline-primary">Tìm kiếm</button>
                                                </div>
                                            </EditForm>
                                        </div>

                                        <div class="modal-body">
                                            <table class="table table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>Hình Ảnh</th>
                                                        <th>Tên Sản Phẩm</th>
                                                        <th>Mô Tả</th>
                                                        <th>Công Nghệ Dệt</th>
                                                        <th>Phong Cách</th>
                                                        <th>Chất Liệu</th>
                                                        <th>Size</th>
                                                        <th>Màu</th>
                                                        <th>Số Lượng trong kho</th>
                                                        <th>Giá Tiền</th>
                                                        <th>Thao tác</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var product in lst_ProductAttributes)
                                                    {
                                                        <tr>
                                                            <td><img src="@product.Image" alt="Hình ảnh" style="width: 130px; height: auto;" /></td>
                                                            <td>@product.Product_Variant.Posts.Title</td>
                                                            <td>@product.Product_Variant?.Description</td>
                                                            <td>@product.Product_Variant?.Textile_Technology?.Title</td>
                                                            <td>@product.Product_Variant?.Style?.Title</td>
                                                            <td>@product.Product_Variant?.Material?.Title</td>
                                                            <td>@product.Size?.Title</td>
                                                            <td>@product.Color?.Title</td>
                                                            <td>@product.Stock Tấm</td>
                                                            <td>@product.Regular_price VNĐ</td>
                                                            <td>
                                                                <div class="input-group">
                                                                    <input type="number" class="form-control text-center" style="width: 100px;"
                                                                           value="@(productQuantities.ContainsKey(product.Id) ? productQuantities[product.Id] : 1)"
                                                                           @oninput="(e) => UpdateQuantity(product.Id, int.TryParse(e.Value?.ToString(), out var value) ? value : 1)"
                                                                           min="1" />
                                                                </div>
                                                                <button class="btn btn-primary mt-2" @onclick="() => AddProduct(order_Details, product.Id)">Chọn</button>
                                                            </td>


                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                            <div class="mt-4">
                                                <PaginationMediaModal TItem="Product_Attributes" PageNumber="page_number" TotalPages="total_pages" PageSize="page_size" TotalItems="totalItems" OnPageChanged="GoToPage" OnPageSizeChanged="OnPageSizeChanged" />
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" @onclick="CloseAddProductModal">Đóng</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-backdrop fade show"></div>

                        }
                        <div class="card-body border-bottom py-3">
                            <div class="d-flex flex-wrap gap-3">
                                @foreach (var order in lst_Orders)
                                {
                                    <div class="invoice-item position-relative p-3 text-center border rounded"
                                         style="background-color: @(order.Id == selectedOrderId ? "#5985f7" : "#edf0f5")"
                                         @onclick="async () => await SelectOrder(order.Id)">
                                        <button type="button" class="btn-close position-absolute top-0 end-0" style="width: 0.8rem; height: 0.8rem; margin: 0.25rem;"
                                                title="Xóa hóa đơn"
                                                @onclick="() => DeleteOrder(order.Id)">
                                        </button>
                                        Hóa đơn @order.Id  <i class="bi bi-cart-check-fill"></i>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table card-table table-vcenter text-nowrap datatable">
                                <thead>
                                    <tr>
                                        <th class="w-1"><input class="form-check-input m-0 align-middle" type="checkbox" aria-label="Select all invoices">All</th>
                                        <th>Hình Ảnh</th>
                                        <th>Tên sản phẩm</th>
                                        <th>Chất liệu</th>
                                        <th>Công nghệ dệt</th>
                                        <th>Phong cách</th>
                                        <th>Màu</th>
                                        <th>Kích thước</th>
                                        <th>Số lượng</th>
                                        <th>Tổng tiền</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in lst_OrderDetail)
                                    {
                                        <tr>
                                            <td>
                                                <input class="form-check-input m-0 align-middle" type="checkbox" aria-label="Select item">
                                            </td>
                                            <td><img src="@item.ProductAttributes.Image" alt="Hình ảnh" style="width: 80px; height: auto;" /></td>
                                            <td>@item.ProductAttributes.Product_Variant.Posts.Title </td>
                                            <td>@item.ProductAttributes.Product_Variant.Material.Title </td>
                                            <td>@item.ProductAttributes.Product_Variant.Textile_Technology.Title </td>
                                            <td>@item.ProductAttributes.Product_Variant.Style.Title </td>
                                            <td>@item.ProductAttributes.Color.Title</td>
                                            <td>@item.ProductAttributes.Size.Title</td>
                                            <td>@item.Quantity </td>
                                            <td>@(item.Quantity * item.ProductAttributes.Regular_price) VNĐ</td>
                                            <td>

                                                <button class="btn btn-danger" @onclick="() => DeleteOrderDetail(item.Id)">
                                                    <i class="bi bi-trash3"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h2 class="card-title">Tổng tiền: @totalAmount VNĐ</h2>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h3 class="card-title">Thông tin khách hàng</h3>
                            <div class="col-auto">
                                <div class="border rounded d-flex align-items-center justify-content-center p-2"
                                     style="width: 200px; background-color: #ccdaff; border-radius: 30px; border-color:#7399fa;">
                                    @(isCustomerAdded ? customerName : "Khách lẻ")
                                </div>
                            </div>

                            <button class="btn btn-primary" @onclick="OpenModalAddCustomer">
                                Chọn khách hàng
                            </button>
                            @if (isAddCustomerModalVisible)
                            {
                                <div class="modal fade show d-block" tabindex="-1" role="dialog">
                                    <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 75%; width: auto;">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Danh sách khách hàng</h5>
                                                <button type="button" class="btn-close" @onclick="CloseModalAddCustomer" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <div class="d-flex align-items-center">
                                                        <label for="searchCustomer" class="me-2">Tìm kiếm:</label>
                                                        <input type="text" id="searchCustomer" class="form-control" style="width: 250px;" placeholder="Nhập SĐT hoặc tên">
                                                    </div>
                                                    <button class="btn btn-success" @onclick="OpenModalCreateCustomer">Thêm mới khách hàng</button>
                                                </div>
                                                @if (isCreateCustomerModalVisible)
                                                {
                                                    <div class="modal fade show d-block" tabindex="-1" role="dialog">
                                                        <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 40%; width: auto;">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title">Thêm mới khách hàng</h5>
                                                                </div>
                                                                <div class="modal-body">
                                                                    <form>
                                                                        <div class="mb-3">
                                                                            <label class="form-label">Tên khách hàng</label>
                                                                            <input class="form-control" @bind="@Customer.Name">
                                                                        </div>
                                                                        <div class="mb-3">
                                                                            <label class="form-label">Số Điện thoại</label>
                                                                            <input class="form-control" @bind="@Customer.Phone">
                                                                        </div>
                                                                        <div class="mb-3">
                                                                            <label for="exampleInputEmail1" class="form-label">Email</label>
                                                                            <input type="email" class="form-control" id="exampleInputEmail1" @bind="@Customer.Email" aria-describedby="emailHelp">
                                                                        </div>
                                                                        <div class="modal-footer d-flex justify-content-between">
                                                                            <button type="button" class="btn btn-primary" @onclick="CreateCustomer">Xác nhận</button>
                                                                            <button type="button" class="btn btn-secondary" @onclick="CloseModalCreateCustomer">Hủy</button>
                                                                        </div>
                                                                    </form>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                }
                                                <table class="table table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th>STT</th>
                                                            <th>Họ và tên </th>
                                                            <th>Số điện thoại</th>
                                                            <th>Email</th>
                                                            <th>Thao tác</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in lst_Customer)
                                                        {
                                                            <tr>

                                                                <td>1</td>
                                                                <td>@item.Name</td>
                                                                <td>@item.Phone</td>
                                                                <td>@item.Email</td>
                                                                <td>
                                                                    <button class="btn btn-primary mt-2" @onclick="() => AddCustomer(item)">Chọn</button>
                                                                </td>


                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="modal-backdrop fade show"></div>

                            }
                        </div>
                        @if (isDeliveryVisible)
                        {
                            <div class="table-responsive">
                                <div class="container px-4 text-center">
                                    <div class="row gx-2 justify-content-center">
                                        <h1> Thông tin địa chỉ</h1>
                                        <div class="col-auto">
                                            <div class="border rounded p-2" style="width: 200px;">Custom column padding</div>
                                        </div>
                                        <div class="col-auto">
                                            <div class="border rounded p-2" style="width: 200px;">Custom column padding</div>
                                        </div>
                                        <div class="col-auto">
                                            <div class="border rounded p-2" style="width: 200px;">Custom column padding</div>
                                        </div>
                                        <div class="col-auto">
                                            <div class="border rounded p-2" style="width: 200px;">Custom column padding</div>
                                        </div>
                                        <div class="col-auto">
                                            <div class="border rounded p-2" style="width: 200px;">Custom column padding</div>
                                        </div>
                                        <div class="col-auto">
                                            <div class="border rounded p-2" style="width: 200px;">Custom column padding</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h3 class="card-title">Thông tin đơn hàng</h3>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" @bind="isDeliveryVisible">
                                <label class="form-check-label" for="flexSwitchCheckChecked">Giao hàng</label>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <div class="container px-4 text-center">
                                <div class="row gx-2 justify-content-between">
                                    <div class="col-auto" readonly>
                                        <fieldset class="border p-2" style="width: 200px; padding-top: 0.5rem;">
                                            <legend class="float-none w-auto px-2" style="font-size: 0.75rem; text-align: left; margin-bottom: 0;">Tiêu đề</legend>
                                            <div style="margin-top: -0.5rem;">Mã giảm giá</div>
                                        </fieldset>
                                    </div>
                                    <div class="col-auto" readonly>
                                        <fieldset class="border p-2" style="width: 200px; padding-top: 0.5rem;">
                                            <legend class="float-none w-auto px-2" style="font-size: 0.75rem; text-align: left; margin-bottom: 0;">.</legend>
                                            <div style="margin-top: -0.5rem;">code</div>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                            <div class="card-table table-responsive">
                                <table class="table table-vcenter table-borderless">
                                    <tbody>
                                        <tr>
                                            <td class="td-truncate">
                                                <div class="text-truncate">
                                                    Tiền hàng :
                                                </div>
                                            </td>
                                            <td class="text-nowrap text-secondary"> @totalAmount VND</td>

                                        </tr>
                                        <tr>
                                            <td class="td-truncate">
                                                <div class="text-truncate">
                                                    Phí vận chuyển
                                                </div>
                                            </td>
                                            <td class="text-nowrap text-secondary"> 0 VND</td>

                                        </tr>
                                        <tr>
                                            <td class="td-truncate">
                                                <div class="text-truncate">
                                                    Tiền giảm giá
                                                </div>
                                            </td>
                                            <td class="text-nowrap text-secondary"> 0 VND</td>

                                        </tr>
                                        <tr>
                                            <td class="td-truncate">
                                                <div class="text-truncate">
                                                    Tổng tiền :
                                                </div>
                                            </td>
                                            <td class="text-nowrap text-secondary"> @totalAmount VND</td>
                                        </tr>

                                    </tbody>
                                </table>
                            </div>
                            <div class="d-flex justify-content-center my-3">
                                <button type="button" class="btn btn-primary" @onclick="CheckOut">Xác nhận thanh toán</button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private long selectedOrderId;
    private string customerName = "";
    private bool isCustomerAdded = false; // Kiểm tra xem khách hàng đã được thêm chưa
    private Orders orders = new Orders();
    private Product_Attributes product_Attributes = new Product_Attributes();
    private Order_details order_Details = new Order_details();
    private Users Customer = new Users();
    private List<Users> lst_Customer = new List<Users>();
    private Address Address = new Address();
    private List<Address> lst_Address = new List<Address>();
    private List<Order_details> lst_OrderDetail = new List<Order_details>();
    private List<Orders> lst_Orders = new List<Orders>();
    private List<Product_Attributes> lst_ProductAttributes = new List<Product_Attributes>();
    private bool isAddProductModalVisible = false; // kiểm tra modal sản phẩm được mở chưa
    private bool isAddCustomerModalVisible = false; // modal khách hàng
    private bool isCreateCustomerModalVisible = false;
    private bool isDeliveryVisible = false;
    private Dictionary<long, int> productQuantities = new Dictionary<long, int>();
    private decimal totalAmount = 0;
    private string search_query = string.Empty;
    private int page_number = 1;
    private int total_pages = 1;
    private int page_size = 10;
    private int totalItems;

    private async Task OnSearch()
    {
        // Ngăn ngừa load lại trang
        lst_ProductAttributes = await productAttributeService.GetByTypeAsync(page_number, page_size, search_query);
    }
    private async Task LoadPosts()
    {

        string searchTerm = string.IsNullOrEmpty(search_query) ? "" : search_query;
        lst_ProductAttributes = await productAttributeService.GetByTypeAsync(page_number, page_size, searchTerm);
        totalItems = await productAttributeService.GetTotalCountAsync(searchTerm);
        total_pages = (int)Math.Ceiling((double)totalItems / page_size);
        StateHasChanged();
    }
    private async Task GoToPage(int page)
    {
        page_number = page;
        await LoadPosts();
    }
    private async Task OnPageSizeChanged(int newPageSize)
    {
        page_size = newPageSize;
        page_number = 1;
        await LoadPosts();
    }

    private async Task SelectOrder(long orderId) // chọn hóa đơn
    {
        selectedOrderId = orderId;
        lst_OrderDetail = await orderDetailService.GetOrderDetailsByOrderId(selectedOrderId);
        totalAmount = lst_OrderDetail.Sum(item => (item.Quantity * item.ProductAttributes.Regular_price) ?? 0);
        var orderToUpdate = await orderService.GetByIdOrders(selectedOrderId);
        if (orderToUpdate?.User_id != null)
        {
            var customer = await userService.GetById(orderToUpdate.Users.Id);
            customerName = customer?.Name;
            isCustomerAdded = customer != null;
        }
        else
        {
            customerName = "Khách lẻ";
            isCustomerAdded = false;
        }

        await LoadOrderDetails();
    }
    private async Task UpdateQuantity(long productId, int quantity)
    {
        if (quantity <= 0)
        {
            await JS.InvokeVoidAsync("toastr.error", "Số lượng phải lớn hơn 0.");
            return;
        }
        if (productQuantities.ContainsKey(productId))
        {
            productQuantities[productId] = quantity;
        }
        else
        {
            productQuantities.Add(productId, quantity);
        }
    } // thay đổi số lượng trong modal sản phẩm
    private int GetQuantity(long productId)
    {
        return productQuantities.ContainsKey(productId) ? productQuantities[productId] : 1;
    } // lấy số lượng
    private void ShowAddProductDetailModal()
    {
        isAddProductModalVisible = true;
    } // mở modal sản phẩm
    private async void ShowAddProductModal()
    {
        if (selectedOrderId == 0)
        {
            isAddProductModalVisible = false;
            await JS.InvokeVoidAsync("toastr.error", "Vui lòng chọn hóa đơn trước");
        }
        else
        {
            isAddProductModalVisible = true;
            lst_ProductAttributes = await productAttributeService.GetByTypeAsync(page_number, page_size, search_query);
        }

    }// danh sách sản phẩm trong modal
    private void CloseAddProductModal()
    {
        isAddProductModalVisible = false;
    }
    private async Task LoadProducts()
    {
        lst_ProductAttributes = await productAttributeService.GetByTypeAsync(page_number, page_size, search_query);
    }
    private async Task LoadOrderDetails() // danh sách đơn hàng chi tiết của đơn hàng được chọn
    {
        lst_OrderDetail = await orderDetailService.GetOrderDetailsByOrderId(selectedOrderId);
        totalAmount = lst_OrderDetail.Sum(item => (item.Quantity * item.ProductAttributes.Regular_price) ?? 0);
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
        await LoadOrders();
        var totalAmount = lst_OrderDetail.Sum(item => item.Quantity * item.ProductAttributes.Regular_price);
       // lst_ProductAttributes = await productAttributeService.GetAllProductAttributes();
    
    } // LOAD
    private async Task LoadOrders() // lấy ra các hóa đơn treo ( chưa thanh toán )
    {
        var allOrders = await orderService.GetAll();
        lst_Orders = allOrders.Where(order => order.Status == "Hóa đơn treo").ToList();
        StateHasChanged();
    }
    private async Task DeleteOrder(long id)
    {
        await orderService.Delete(id);
        await LoadOrders();
    }// xóa order
    private async Task DeleteOrderDetail(long id) // xóa orderdetail
    {
        await orderDetailService.Delete(id);
        totalAmount = lst_OrderDetail.Sum(item => (item.Quantity * item.ProductAttributes.Regular_price) ?? 0);
        await LoadOrderDetails();
    }
    private async Task CreateOrder()
    {
        orders.Status = "Hóa đơn treo";
        await orderService.Create(orders);
        lst_Orders = await orderService.GetAll();
        await LoadOrders();
    }// tạo order
    private bool IsDeliveryVisible
    {
        get => isDeliveryVisible;
        set
        {
            if (isDeliveryVisible != value)
            {
                isDeliveryVisible = value;
                UpdateOrderNote();
            }
        }
    }
    private async Task UpdateOrderNote()
    {
        if (isDeliveryVisible == false)
        {
            orders.Note = "Tại quầy";
        }
        else
        {
            orders.Note = "Giao hàng";
        }
        await orderService.Update(orders, orders.Id);
        lst_Orders = await orderService.GetAll();
    }
    private async Task AddProduct(Order_details orderDetails, long productAttributeId)
    {
        int quantity = productQuantities.ContainsKey(productAttributeId) ? productQuantities[productAttributeId] : 0;

        // Kiểm tra số lượng hợp lệ
        if (quantity <= 0)
        {
            await JS.InvokeVoidAsync("toastr.error", "Số lượng phải lớn hơn 0.");
            return;
        }

        var productAttribute = await productAttributeService.GetProductAttributesById(productAttributeId);
        if (productAttribute == null)
        {
            await JS.InvokeVoidAsync("toastr.error", "Sản phẩm không tồn tại.");
            return;
        }

        // Kiểm tra số lượng tồn kho
        if (quantity > productAttribute.Stock)
        {
            await JS.InvokeVoidAsync("toastr.error", "Sản phẩm trong kho không đủ.");
            return;
        }

        var existingOrderDetail = await orderDetailService.GetByOrderIdAndProductAttributeId(selectedOrderId, productAttributeId);
        if (existingOrderDetail != null)
        {
            if (existingOrderDetail.Quantity + quantity > productAttribute.Stock)
            {
                await JS.InvokeVoidAsync("toastr.error", "Số lượng trong kho không đủ.");
                return;
            }
            // Cộng dồn số lượng nếu sản phẩm đã tồn tại
            existingOrderDetail.Quantity += quantity;
            await orderDetailService.Update(existingOrderDetail, existingOrderDetail.Id);
        }
        else
        {
            orderDetails = new Order_details
                {
                    Quantity = quantity,
                    OrderId = selectedOrderId,
                    Product_Attribute_Id = productAttributeId
                };

            await orderDetailService.Create(orderDetails);
        }

        await LoadOrderDetails();
        productQuantities[productAttributeId] = 0;
        totalAmount = lst_OrderDetail.Sum(item => (item.Quantity * item.ProductAttributes.Regular_price) ?? 0);
    }
    private async void OpenModalAddCustomer()
    {
        if (selectedOrderId == 0)
        {
            isAddCustomerModalVisible = false;
            await JS.InvokeVoidAsync("toastr.error", "Vui lòng chọn hóa đơn trước");
        }
        else
        {
            lst_Customer = await userService.GetAll();
            isAddCustomerModalVisible = true;

        }
    }
    private async void CloseModalAddCustomer()
    {
        isAddCustomerModalVisible = false;
    }
    private async Task AddCustomer(Users selectedCustomer)
    {

        var orderToUpdate = await orderService.GetByIdOrders(selectedOrderId);
        if (orderToUpdate != null)
        {
            orderToUpdate.User_id = selectedCustomer.Id;
            await orderService.Update(orderToUpdate, orderToUpdate.Id);
        }
        isAddCustomerModalVisible = false;
        customerName = selectedCustomer.Name;
        isCustomerAdded = true;

        // Cập nhật lại thông tin đơn hàng
        lst_OrderDetail = await orderDetailService.GetOrderDetailsByOrderId(selectedOrderId);
        totalAmount = lst_OrderDetail.Sum(item => (item.Quantity * item.ProductAttributes.Regular_price) ?? 0);
        await LoadOrders();
    }
    private async void CreateCustomer()
    {
        var createdCustomer = await userService.Create(Customer);
        lst_Customer = await userService.GetAll();
        isCustomerAdded = true;
        isCreateCustomerModalVisible = false;
        isAddCustomerModalVisible = false;
        customerName = createdCustomer.Name;
    }
    private async void OpenModalCreateCustomer()
    {
        isCreateCustomerModalVisible = true;
    }
    private async void CloseModalCreateCustomer()
    {
        isCreateCustomerModalVisible = false;
    }
    private async void CheckOut()
    {
        var orderToUpdate = await orderService.GetByIdOrders(selectedOrderId);
        if (orderToUpdate != null)
        {
            if (orderToUpdate.User_id == null)
            {
                orderToUpdate.User_id = 1;
            }
            orderToUpdate.Status = "Đã thanh toán";  // Cập nhật trạng thái
            await orderService.Update(orderToUpdate, orderToUpdate.Id);
            foreach (var item in lst_OrderDetail)
            {
                var product = await productAttributeService.GetProductAttributesById(item.Product_Attribute_Id);
                if (product != null)
                {
                    if (item.Quantity > product.Stock)
                    {
                        await JS.InvokeVoidAsync("toastr.error", $"Số lượng sản phẩm {product.Product_Variant.Posts.Title} trong kho không đủ.");
                        return;
                    }
                    product.Stock -= item.Quantity; // trừ số lượng trong kho
                    await productAttributeService.Update(product, product.Id);
                }
            }
        }
        selectedOrderId = 0;
        customerName = "";
        isCustomerAdded = false;
        lst_OrderDetail.Clear();
        totalAmount = 0;
        productQuantities.Clear();
        isAddProductModalVisible = false;
        isAddCustomerModalVisible = false;
        isCreateCustomerModalVisible = false;
        await LoadOrderDetails();
        await LoadOrders();
        await LoadPosts();
        await LoadProducts();
        await JS.InvokeVoidAsync("toastr.success", "Đơn hàng đã được thanh toán thành công!");
    }

}
