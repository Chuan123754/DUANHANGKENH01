@page "/admin/sell"
@inject NavigationManager nav
@inject OrderIServices order
@inject OrderDetailsIServices orderDetail
@inject IProductAttributeServices productAttribute
@inject IProductVariantServices productVariant
 
<style>
    .custom-modal-size {
        max-width: 200%; 
    }

    .modal-dialog-scrollable {
        max-height: 80vh; 
        overflow-y: auto;
    }

    .table {
        width: 100%;
        table-layout: auto;
    }
</style>
<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <h2 class="page-title">
                        SELLING
                    </h2>
                </div>
                <div class="col-auto ms-auto d-print-none">
                    <div class="btn-list">
                        <button class="btn btn-primary d-none d-sm-inline-block" @onclick="CreateOrder">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <path d="M12 5l0 14" />
                                <path d="M5 12l14 0" />
                            </svg>
                            Tạo hóa đơn
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Page body -->
    <div class="page-body">
        <div class="container-xl">
            <div class="row row-deck row-cards">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h2 class="card-title">MÃ HÓA ĐƠN :  @selectedOrderId</h2>
                            <!-- Nút thêm sản phẩm -->
                            <button class="btn btn-secondary" @onclick="ShowAddProductModal">
                                Thêm sản phẩm
                            </button>
                        </div>
                        @if (isAddProductModalVisible)
                        {
                            <div class="modal fade show d-block" tabindex="-1" role="dialog">
                                <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 75%; width: auto;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Thêm Sản Phẩm</h5>
                                            <button type="button" class="btn-close" @onclick="CloseAddProductModal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <table class="table table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>Tên Sản Phẩm</th>
                                                        <th>Hình Ảnh</th>
                                                        <th>Trạng Thái</th>
                                                        <th>Mô Tả</th>
                                                        <th>Công Nghệ Dệt</th>
                                                        <th>Phong Cách</th>
                                                        <th>Chất Liệu</th>
                                                        <th>Size</th>
                                                        <th>Màu</th>
                                                        <th>Số Lượng trong kho</th>
                                                        <th>Giá Tiền</th>
                                                        <th>Thao tác</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var product in lst_ProductAttributes)
                                                    {
                                                        <tr>
                                                            <td>@product.Product_Variant.Posts.Title</td> 
                                                            <td><img src="@product.Image" alt="Hình ảnh" style="width: 50px; height: auto;" /></td> <!-- Hình ảnh -->
                                                            <td>@product.Status</td> 
                                                            <td>@product.Product_Variant?.Description</td>
                                                            <td>@product.Product_Variant?.Textile_Technology?.Title</td>
                                                            <td>@product.Product_Variant?.Style?.Title</td> 
                                                            <td>@product.Product_Variant?.Material?.Title</td> 
                                                            <td>@product.Size?.Title</td> 
                                                            <td>@product.Color?.Title</td> 
                                                            <td>@product.Stock Tấm</td> 
                                                            <td>@product.Regular_price VNĐ</td>
                                                            <td>
                                                                <div class="input-group">
                                                                    <input type="number" class="form-control text-center" style="width: 60px;"
                                                                           value="@(productQuantities.ContainsKey(product.Id) ? productQuantities[product.Id] : 1)"
                                                                           @oninput="(e) => UpdateQuantity(product.Id, int.TryParse(e.Value?.ToString(), out var value) ? value : 1)"
                                                                           min="1" />
                                                                </div>
                                                                <button class="btn btn-primary mt-2" @onclick="() => AddProduct(order_Details, product.Id)">Chọn</button>
                                                            </td>


                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" @onclick="CloseAddProductModal">Đóng</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-backdrop fade show"></div>

                        }
                        <div class="card-body border-bottom py-3">
                            <div class="d-flex flex-wrap gap-3">
                                @foreach (var order in lst_Orders)
                                {
                                    <div class="invoice-item position-relative p-3 text-center bg-light border rounded"
                                         @onclick="async () => await SelectOrder(order.Id)">
                                        <button type="button" class="btn-close position-absolute top-0 end-0 me-2 mt-2"
                                                title="Xóa hóa đơn"
                                                @onclick="() => DeleteOrder(order.Id)">
                                        </button>
                                        Hóa đơn #@order.Id
                                    </div>
                                }
                            </div>
                        </div>
   
                        <div class="table-responsive">
                            <table class="table card-table table-vcenter text-nowrap datatable">
                                <thead>
                                    <tr>
                                        <th class="w-1"><input class="form-check-input m-0 align-middle" type="checkbox" aria-label="Select all invoices">All</th>
                                        <th>Tên sản phẩm</th>
                                        <th>Chất liệu</th>
                                        <th>Công nghệ dệt</th>
                                        <th>Phong cách</th>
                                        <th>Màu</th>
                                        <th>Kích thước</th>
                                        <th>Số lượng</th>
                                        <th>Tổng tiền</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in lst_OrderDetail)
                                    {
                                        <tr>
                                            <td>
                                                <input class="form-check-input m-0 align-middle" type="checkbox" aria-label="Select item">
                                            </td>
                                            <td>@item.ProductAttributes.Product_Variant.Posts.Title </td>
                                            <td>@item.ProductAttributes.Product_Variant.Material.Title </td>
                                            <td>@item.ProductAttributes.Product_Variant.Textile_Technology.Title </td>
                                            <td>@item.ProductAttributes.Product_Variant.Style.Title </td>
                                            <td>@item.ProductAttributes.Color.Title</td>
                                            <td>@item.ProductAttributes.Size.Title</td>
                                            <td>@item.Quantity </td>
                                            <td>@(item.Quantity*item.ProductAttributes.Regular_price) VNĐ</td>
                                            <td>
                                                <button class="btn btn-danger" @onclick="() => DeleteOrderDetail(item.Id)">Xóa</button>
                                            </td>

                                           
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private long selectedOrderId;
    private Orders orders = new Orders();
    private Order_details order_Details = new Order_details();
    private Users customer = new Users();
    private Address address = new Address();
    private List<Order_details> lst_OrderDetail = new List<Order_details>();
    private List<Orders> lst_Orders = new List<Orders>();
    private List<Product_Attributes> lst_ProductAttributes = new List<Product_Attributes>();
    private List<Users> lst_Customer = new List<Users>();
    private bool isAddProductModalVisible = false;
    private Dictionary<long, int> productQuantities = new Dictionary<long, int>();

    private async Task SelectOrder(long orderId)
    {
        selectedOrderId = orderId;
        lst_OrderDetail = await orderDetail.GetOrderDetailsByOrderId(selectedOrderId);
        await LoadOrderDetails();
    }
    private void UpdateQuantity(long productId, int quantity)
    {
        if (productQuantities.ContainsKey(productId))
        {
            productQuantities[productId] = quantity;
        }
        else
        {
            productQuantities.Add(productId, quantity);
        }
    }
    private int GetQuantity(long productId)
    {
        return productQuantities.ContainsKey(productId) ? productQuantities[productId] : 1;
    }
    private void ShowAddProductDetailModal()
    {
        isAddProductModalVisible = true;
    }
    private async void ShowAddProductModal()
    {
        isAddProductModalVisible = true;

        lst_ProductAttributes = await productAttribute.GetAllProductAttributes();
    }
    private void CloseAddProductModal()
    {
        isAddProductModalVisible = false;
    }
    private async Task LoadOrderDetails()
    {
        lst_OrderDetail = await orderDetail.GetOrderDetailsByOrderId(selectedOrderId);
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadOrders();
        lst_ProductAttributes = await productAttribute.GetAllProductAttributes();
    }
    private async Task LoadOrders()
    {
        lst_Orders = await order.GetAll();
        StateHasChanged(); 
    }
    private async Task DeleteOrder(long id)
    {
        await order.Delete(id);
        await LoadOrders();
    }
    private async Task DeleteOrderDetail(long id)
    {
        await orderDetail.Delete(id);
        await LoadOrderDetails();
    }
    private async Task CreateOrder()
    {
        await order.Create(orders);
        lst_Orders = await order.GetAll();
        await LoadOrders();
    }
    private async Task AddProduct(Order_details orderDetails, long productAttributeId)
    {
        int quantity = productQuantities.ContainsKey(productAttributeId) ? productQuantities[productAttributeId] : 1;
        // Kiểm tra xem sản phẩm đã tồn tại trong hóa đơn chưa
        var existingOrderDetail = await orderDetail.GetByOrderIdAndProductAttributeId(selectedOrderId, productAttributeId);
        if (existingOrderDetail != null)
        {
            // cộng dồn
            existingOrderDetail.Quantity += quantity;
            await orderDetail.Update(existingOrderDetail, existingOrderDetail.Id);
        }
        else
        {
            // tạo mới
            orderDetails = new Order_details
                {
                    Quantity = quantity,
                    OrderId = selectedOrderId,
                    Product_Attribute_Id = productAttributeId
                };

            await orderDetail.Create(orderDetails);
        }
        await LoadOrderDetails();
        productQuantities[productAttributeId] = 1;
    }

}

