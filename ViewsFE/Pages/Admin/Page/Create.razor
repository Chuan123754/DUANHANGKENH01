@page "/admin/page/create"
@inject NavigationManager nav
@inject IPostSer sev
@inject ITagsServices stag
@inject IJSRuntime JS
<EditForm Model="Posts" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="page-wrapper">
        <div class="page-header d-print-none">
            <div class="container-xl">
                <div class="row g-2 align-items-center">
                    <div class="col">
                        <h2 class="page-title">
                            Thêm bài viết
                        </h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="page-body">
            <div class="container-xl">
                <div class="row">
                    <div class="col-md-9 col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="title" class="form-label">Tên trang</label>
                                    <InputText id="title" class="form-control" @bind-Value="Posts.Title" placeholder="Tên trang" required />
                                    <div id="title_error" class="validate-error"></div>
                                </div>

                                <div class="mb-3">
                                    <label for="seoSlug" class="form-label">Đường dẫn</label>
                                    <InputText id="seoSlug" class="form-control" @bind-Value="Posts.Slug" />
                                </div>

                                <div class="mb-3">
                                    <label for="shortDescription" class="form-label">Mô tả ngắn</label>
                                    <InputTextArea id="shortDescription" class="form-control" rows="3" @bind-Value="Posts.Short_description" />
                                </div>

                                <div class="mb-3">
                                    <label for="tinymce-textarea" class="form-label">Mô tả</label>
                                    <InputTextArea @bind-Value="Posts.Description" class="form-control" id="tinymce-textarea" rows="5" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-12">
                        <div class="sticky-top position-sticky">
                            <div class="accordion bg-white mb-3 mt-3 mt-md-0">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button " type="button" data-bs-toggle="collapse"
                                                data-bs-target="#action-1" aria-expanded="true">
                                            Đăng
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" id="action-1" data-bs-parent="#accordion-example">
                                        <div class="accordion-body pt-0">
                                            <div class="form-group mb-3">
                                                <label class="form-label">Trạng thái</label>
                                                <select @bind="Posts.Status" class="form-control">

                                                    @foreach (var status in statuses)
                                                    {
                                                        <option value="@status.Key" selected="@(Posts.Status == status.Key)">
                                                            @status.Value
                                                        </option>
                                                    }
                                                </select>
                                            </div>

                                            <!-- Nút gửi -->
                                            <button type="submit" class="btn btn-primary" style="float: right">
                                                Đăng
                                            </button>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="accordion bg-white mb-3">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#category" aria-expanded="true">
                                            Ảnh đại diện
                                        </button>
                                    </h2>
                                    <div class="accordion-collapse collapse show" data-bs-parent="#accordion-example">
                                        <div class="accordion-body pt-0">
                                         

                                            <div id="feature_image" class="image-post-box d-flex align-items-center justify-content-center open-media-modal"
                                                 data-multiple="false" data-refer-id="#feature_image" data-input-name="meta_data[feature_image]"
                                                 data-image-ids="@featureImageId">
                                                @if (!string.IsNullOrEmpty(featureImageId))
                                                {
                                                    <input type="hidden" name="meta_data[feature_image][0][id]" value="@featureImageId" />
                                                    <input type="hidden" name="meta_data[feature_image][0][image]" value="@featureImageImage" />
                                                    <img src="@featureImageImage" class="w-100 h-100 object-cover" />
                                                }
                                                <div class="icon d-flex align-items-center justify-content-center @(string.IsNullOrEmpty(featureImageImage) ? "" : "d-none")">
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" stroke-width="1"
                                                         stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                        <path d="M12 5l0 14" />
                                                        <path d="M5 12l14 0" />
                                                    </svg>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="accordion bg-white mb-3">
                                    <div class="accordion-item">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#tag" aria-expanded="true">
                                                Từ khóa
                                            </button>
                                        </h2>
                                        <div id="tag" class="accordion-collapse collapse show">
                                            <div class="accordion-body pt-0">
                                                <div class="form-group mb-3">
                                                    <select id="tags-selects" class="form-select" name="tags[]" data-placeholder="Nhập từ khóa" multiple>
                                                        @if (Posts?.Post_tags != null && Posts.Post_tags.Any())
                                                        {
                                                            var tagIds = Posts.Post_tags.Select(pt => pt.Tag_Id).ToList();

                                                            foreach (var tag in Tags) // Tags là danh sách tất cả từ khóa
                                                            {
                                                                <option value="@tag.Id" selected="@(tagIds.Contains(tag.Id) ? "selected" : "")">@tag.Title</option>
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                                <div class="mb-3">
                                                    <input type="text" id="new-tag-input" class="form-control" placeholder="Nhập từ khóa mới" />
                                                    <button type="button" class="btn btn-secondary mt-2" @onclick="AddNewTag">Thêm từ khóa</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private Product_Posts Posts = new Product_Posts();
    private Tags tags = new Tags();
    private List<Tags> Tags;
    private Dictionary<string, string> statuses = Product_Posts.STATUSES;

    // Lấy ảnh đại diện từ post (Giả sử đã có logic để khởi tạo post)
    private string featureImageId => GetMedia(Posts, "feature_image", "id");
    private string featureImageImage => GetMedia(Posts, "feature_image", "image");

    private string GetMedia(Product_Posts post, string key, string type)
    {
        // Thay thế bằng logic lấy dữ liệu thực tế từ post
        return type == "id" ? "image_id_value" : "image_url_value"; // Ví dụ
    }
    private async Task AddNewTag()
    {
        await stag.Create(tags);

    }
    protected override async void OnInitialized()
    {
        Tags = await stag.GetAll();
        Posts.Status = Product_Posts.STATUS_DRAFT;
        Posts.Seo = new Seo(); // Khởi tạo Seo nếu cần
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initTinyMCE");
            await JS.InvokeVoidAsync("setTinyMCEContent", Posts.Description);
        }
    }

    private async void HandleValidSubmit()
    {
        Posts.Description = await JS.InvokeAsync<string>("getTinyMCEContent");
        await sev.CreatePage(Posts);
        nav.NavigateTo("/admin/page");
    }
}