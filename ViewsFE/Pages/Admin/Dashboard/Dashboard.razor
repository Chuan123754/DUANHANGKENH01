 @page "/"
 @using BlazorBootstrap
 @inject IPostSer sev
@* @inject IProductVariantServices varian *@
 @inject IAccountService accountService
 @inject IOrderIServices orde
 @inject OrderDetailsIServices ordedatil
 @inject IUserService usesv
 @inject NavigationManager nav
 @inject CustomAuthenticationStateProvider _authAdmin
 @inject IAccsessViewscsServices accv
 @inject IJSRuntime JS
 @using System.Text.Json
@using static ViewsFE.Services.OrderDetailsServices
@inject AuthenticationStateProvider AuthStateProvider
@inject RoleService RoleService


<!-- Page header -->
<div class="page-header d-print-none">
    <div class="container-xl">
        <div class="row g-2 align-items-center">
            <div class="col">
                <!-- Page pre-title -->
                <div class="page-pretitle">
                    HangKenh
                </div>
                <h2 class="page-title">
                    Thống kê
                </h2>
            </div>
            <div class="d-flex justify-content-end align-items-center gap-2 mb-3">
                <input type="date" id="startDate" @bind="startDate" class="form-control" placeholder="Ngày bắt đầu" style="max-width: 200px;" />
                <input type="date" id="endDate" @bind="endDate" class="form-control" placeholder="Ngày kết thúc" style="max-width: 200px;" />
                <button class="btn btn-primary" @onclick="FilterByDateRange">Lọc theo thời gian</button>
            </div>
        </div>
    </div>
</div>
<!-- Page body -->
<div class="page-body">
    <div class="container-xl">
        <div class="row row-deck row-cards">
            <div class="col-sm-6 col-lg-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="subheader">
                                @GetSubheaderTitle()

                            </div>
                            <div class="ms-auto lh-1">
                                <div class="dropdown" id="dropdown-revenue">
                                    <a class="dropdown-toggle text-secondary" href="#" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Doanh số
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-end">
                                        <a class="dropdown-item @(selectedMode == "day" ? "active" : "")" href="#" @onclick='() => SetMode("day")'>Doanh số ngày</a>
                                        <a class="dropdown-item @(selectedMode == "week" ? "active" : "")" href="#" @onclick='() => SetMode("week")'>Doanh số tuần</a>
                                        <a class="dropdown-item @(selectedMode == "month" ? "active" : "")" href="#" @onclick='() => SetMode("month")'>Doanh số tháng</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3"></div>
                        <div class="h1 mb-3">
                            @DisplayRevenue()
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-lg-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="subheader">
                                @GetSubheaderTitleUser()
                            </div>
                            <div class="ms-auto lh-1">
                                <div class="dropdown" id="dropdown-users">
                                    <a class="dropdown-toggle text-secondary" href="#" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Khách hàng
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-end">
                                        <a class="dropdown-item @(selectedModeUser == "dayUser" ? "active" : "")" href="#" @onclick='() => SetModeUser("dayUser")'>
                                            Khách hàng mới theo ngày
                                        </a>
                                        <a class="dropdown-item @(selectedModeUser == "monthUser" ? "active" : "")" href="#" @onclick='() => SetModeUser("monthUser")'>Khách hàng mới theo tháng</a>
                                        <a class="dropdown-item @(selectedModeUser == "yearUser" ? "active" : "")" href="#" @onclick='() => SetModeUser("yearUser")'>Khách hàng mới theo năm</a>
                                        <a class="dropdown-item @(selectedModeUser == "totalUser" ? "active" : "")" href="#" @onclick='() => SetModeUser("totalUser")'>Tổng số khách hàng mới</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3"></div>
                        <div class="d-flex align-items-baseline">
                            <div class="h1 mb-0 me-2">
                                @DisplayRevenueUser()
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-sm-6 col-lg-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="subheader">Tổng số đơn đã bán</div>
                        </div>
                        <div class="mb-3"></div>
                        <div class="d-flex align-items-baseline">
                            <div class="h1 mb-3 me-2">@totalOrder</div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-lg-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="subheader">Doanh thu theo khoảng thời gian</div>

                        </div>
                        <div class="mb-3"></div>
                        <div class="d-flex align-items-baseline">
                            <div class="h1 mb-3 me-2">
                                @(total != null ? string.Format("{0:N0}", total).Replace(".", ",") + " VNĐ" : "Không có dữ liệu")
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-12">
                <div class="row row-cards">
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-sm">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-green text-white avatar">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/shopping-cart -->
                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 17h-11v-14h-2" /><path d="M6 5l14 1l-1 7h-13" /></svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium">
                                            Đơn hàng hôm nay
                                        </div>
                                        <div class="text-secondary">
                                            @totalOrderToday
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-sm">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-primary text-white avatar">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/currency-dollar -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-book"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0" /><path d="M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0" /><path d="M3 6l0 13" /><path d="M12 6l0 13" /><path d="M21 6l0 13" /></svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium">
                                            Tổng số bài viết
                                        </div>
                                        <div class="text-secondary">
                                            @totalPost
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-sm">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-twitter text-white avatar">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/brand-twitter -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-building-store"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M3 21l18 0" /><path d="M3 7v1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1h-18l2 -4h14l2 4" /><path d="M5 21l0 -10.15" /><path d="M19 21l0 -10.15" /><path d="M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4" /></svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium">
                                            Tổng số sản phẩm
                                        </div>
                                        <div class="text-secondary">
                                            @totalProduct
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-sm">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-facebook text-white avatar">
                                            <!-- Download SVG icon from http://tabler-icons.io/i/brand-facebook -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-presentation"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M3 4l18 0" /><path d="M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-10" /><path d="M12 16l0 4" /><path d="M9 20l6 0" /><path d="M8 12l3 -3l2 2l3 -3" /></svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium">
                                            Tổng số lượt truy cập trang
                                        </div>
                                        <div class="text-secondary">
                                            @totalViews
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">

                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title">Doanh số theo từng năm</h3>

                        <div id="revenueChart"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title">Tổng đơn hàng theo từng tháng</h3>

                        <div class="d-flex justify-content-center align-items-center" style="width: 100%; height: 350px;">
                            <div style="width: 350px; height: 350px;">
                                <canvas id="orderDoughnutChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <div class="subheader">
                            <h3>@GetSubheaderUserTop5()</h3>
                        </div>
                        <div class="ms-auto lh-1">
                            <div class="dropdown" id="dropdown-users">
                                <a class="dropdown-toggle text-secondary" href="#" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Top 5 khách hàng
                                </a>
                                <div class="dropdown-menu dropdown-menu-end">
                                    <a class="dropdown-item @(selectedTop5User == "top5all" ? "active" : "")" href="#" @onclick='() => SetModeUserTop5("top5all")'>
                                        Top 5 khách hàng mua nhiều đơn
                                    </a>
                                    <a class="dropdown-item @(selectedTop5User == "top5week" ? "active" : "")" href="#" @onclick='() => SetModeUserTop5("top5week")'>
                                        Top 5 khách hàng mua nhiều đơn tuần này
                                    </a>
                                    <a class="dropdown-item @(selectedTop5User == "top5month" ? "active" : "")" href="#" @onclick='() => SetModeUserTop5("top5month")'>
                                        Top 5 khách hàng mua nhiều đơn tháng này
                                    </a>
                                    <a class="dropdown-item @(selectedTop5User == "top5year" ? "active" : "")" href="#" @onclick='() => SetModeUserTop5("top5year")'>
                                        Top 5 khách hàng mua nhiều đơn năm nay
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-table table-responsive">
                        <table class="table table-vcenter">
                            <thead>
                                <tr>
                                    <th>Tên khách hàng</th>
                                    <th>Tổng số đơn hàng</th>
                                    <th>Tổng số tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (top5Customers != null)
                                {
                                    @foreach (var customer in top5Customers)
                                    {
                                        <tr>
                                            <td>@customer.Name</td>
                                            <td class="text-secondary">@customer.TotalOrders</td>

                                            <td> @string.Format("{0:N0}", customer?.TtotalMoneySpent).Replace(".", ",") VNĐ</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2" class="text-center">Không có dữ liệu</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <div class="subheader">
                            <h3>Top 5 sản phẩm bán chạy</h3>
                        </div>
                    </div>
                    <div class="card-table table-responsive">
                        <table class="table table-vcenter">
                            <thead>
                                <tr>
                                    <th>Tên sản phẩm</th>
                                    <th>Lượt bán ra</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (topSellingProductDtos != null && topSellingProductDtos.Any())
                                {
                                    @foreach (var top5sp in topSellingProductDtos)
                                    {
                                        <tr>
                                            <td>@top5sp.ProductName</td>
                                            <td class="text-secondary">@top5sp.TotalQuantitySold</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2" class="text-center">Không có dữ liệu</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>



        </div>
    </div>
</div>

@code
{
    private string selectedMode = "day";
    private Account admin = new Account();
    private Dictionary<int, decimal> totalRevenuePerYear = new Dictionary<int, decimal>();
    private Dictionary<string, int> totalOrdersPerMonth = new Dictionary<string, int>();
    private int totalPost;
    private int totalProduct;
    private int totalProjetc;
    private int totalOrder;
    private int totalOrderToday;
    private decimal totalPiceToday;
    private decimal totalPiceWeek;
    private decimal totalPiceMonth;
    private string selectedModeUser = "day";
    private int totalUserToday;
    private int totalUserToMonth;
    private int totalUserToYear;
    private int totalUser;
    private long totalViews;
    private string selectedTop5User = "top5all";
    private List<CustomerDto> top5Customers = new List<CustomerDto>();
    private List<TopSellingProductDtoSV> topSellingProductDtos = new List<TopSellingProductDtoSV>();
    private bool isAdmin = false;
    private bool isEmployee = false;
    private DateTime? startDate;
    private DateTime? endDate;
    private decimal? total;
    private async Task LoadPosts()
    {
        totalPost = await sev.GetTotalType("post");
        totalProjetc = await sev.GetTotalType("project");
        // totalProduct = await varian.GetTotal();
        totalOrder = await orde.GetTotal();
        totalOrderToday = await orde.GetTotalToday();
        totalPiceToday = await orde.GetTotalPiceToday();
        totalPiceWeek = await orde.GetTotalPiceWeek();
        totalPiceMonth = await orde.GetTotalPiceMonth();
        totalRevenuePerYear = await orde.GetTotalRevenuePerYear();
        totalOrdersPerMonth = await orde.GetTotalMonth();
        totalUserToday = await usesv.GetTotalUsersByDayAsync();
        totalUserToMonth = await usesv.GetTotalUsersByMonthAsync();
        totalUserToYear = await usesv.GetTotalUsersByYearAsync();
        totalUser = await usesv.GetTotalUsersAsync();
        totalViews = await accv.GetTotal();
        topSellingProductDtos = await ordedatil.GetTop5SellingProductsAsync();
        await DrawChart();
        StateHasChanged();
    }
    private async Task FilterByDateRange()
    {
        if (startDate >= endDate)
        {
            await JS.InvokeVoidAsync("toastr.warning", "Vui lòng nhập thời gian hợp lệ");
            return;
        }
        else
        {
            if (startDate.HasValue && endDate.HasValue)
            {
                total = await orde.GetTotalKhoangThoiGian(startDate, endDate);
            }

        }
    }
    private void SetMode(string mode)
    {
        selectedMode = mode;
        StateHasChanged();
    }
    private void SetModeUser(string mode)
    {
        selectedModeUser = mode;
        StateHasChanged();  // Đảm bảo rằng sau khi thay đổi giá trị, trang sẽ được render lại
    }
    private string DisplayRevenue()
    {
        return selectedMode switch
        {
            "day" => $"{totalPiceToday.ToString("N0")} VND",
            "week" => $"{totalPiceWeek.ToString("N0")} VND",
            "month" => $"{totalPiceMonth.ToString("N0")} VND",
            _ => "0 VND"
        };
    }

    private string GetSubheaderTitle()
    {
        return selectedMode switch
        {
            "day" => "Doanh số hôm nay",
            "week" => "Doanh số tuần này",
            "month" => "Doanh số tháng này",
            _ => "Doanh số"
        };
    }

    private string DisplayRevenueUser()
    {
        return selectedModeUser switch
        {
            "dayUser" => $"{totalUserToday} Người",
            "monthUser" => $"{totalUserToMonth} Người",
            "yearUser" => $"{totalUserToYear} Người",
            "totalUser" => $"{totalUser} Người",
            _ => "0 Người"
        };
    }

    private string GetSubheaderTitleUser()
    {
        return selectedModeUser switch
        {
            "dayUser" => "Khách mới hôm nay",
            "monthUser" => "Khách mới tháng này",
            "yearUser" => "Khách mới năm nay",
            "totalUser" => "Tổng số khách hàng",
            _ => "Khách hàng"
        };
    }

    private string GetSubheaderUserTop5()
    {
        return selectedTop5User switch
        {
            "top5week" => "Top 5 khách hàng mua nhiều đơn tuần này",
            "top5month" => "Top 5 khách hàng mua nhiều đơn tháng này",
            "top5year" => "Top 5 khách hàng mua nhiều đơn năm nay",
            "top5all" => "Top 5 khách hàng mua nhiều đơn",
            _ => "Khách hàng mua nhiều đơn hàng"
        };
    }

    private async Task LoadTop5CustomersAsync()
    {
        Console.WriteLine($"Loading data for {selectedTop5User}");

        var customers = selectedTop5User switch
        {
            "top5week" => await usesv.GetTop5CustomersWeeklyAsync(),
            "top5month" => await usesv.GetTop5CustomersMonthlyAsync(),
            "top5year" => await usesv.GetTop5CustomersYearlyAsync(),
            _ => await usesv.GetTop5CustomersAsync(),
        };

        if (customers == null || !customers.Any())
        {
            Console.WriteLine("No data found for selected mode");
        }

        top5Customers = customers.Select(c => new CustomerDto
            {
                Name = c.Name,
                TotalOrders = c.TotalOrders,
                TtotalMoneySpent = c.TtotalMoneySpent
            }).ToList();
    }

    private async void SetModeUserTop5(string mode)
    {
        selectedTop5User = mode;
        Console.WriteLine($"selectedTop5User: {selectedTop5User}");
        await LoadTop5CustomersAsync();
        StateHasChanged();
    }

    private async Task DrawChart()
    {
        // Tạo danh sách các năm và doanh thu tương ứng từ dữ liệu
        var years = totalRevenuePerYear.Keys.ToArray();
        var revenues = totalRevenuePerYear.Values.ToArray();

        // Cấu hình cho ApexCharts
        var options = new
        {
            chart = new
            {
                type = "bar",
                height = "350"
            },
            series = new[]
        {
    new
    {
    name = "Doanh thu",
    data = revenues
    }
    },
            xaxis = new
            {
                categories = years
            },
            title = new
            {
                text = ""
            }
        };

        // Chuyển đối tượng options thành JSON
        var jsonOptions = JsonSerializer.Serialize(options);

        // Chạy ApexCharts và truyền options vào
        JS.InvokeVoidAsync("eval", $"var chart = new ApexCharts(document.querySelector('#revenueChart'), {jsonOptions}); chart.render();");
        var months = totalOrdersPerMonth.Keys.ToArray();
        var orderCounts = totalOrdersPerMonth.Values.ToArray();
        // Cấu hình cho Chart.js (Biểu đồ Doughnut)
        var optionsdoughnut = new
        {
            type = "doughnut",
            data = new
            {
                labels = months,
                datasets = new[]
        {
    new
    {
    label = "Số lượng đơn hàng",
    data = orderCounts,
    backgroundColor = new[] { "#FFB84C" ,"#FF6F61", "#FF7F50", "#6B8E23", "#48C9B0", "#F39C12", "#8E44AD" }, // Các màu sắc cho các phần trong Doughnut chart
    hoverBackgroundColor = new[] { "#FFA500",  "#FF4500", "#FF6347", "#556B2F", "#20B2AA", "#DFFF00", "#8B008B" }
    }
    }
            },
            options = new
            {
                responsive = true,
                plugins = new
                {
                    legend = new
                    {
                        position = "top"
                    }
                }
            }
        };

        // Chuyển đối tượng options thành JSON
        var jsonOptionsdoughnut = JsonSerializer.Serialize(optionsdoughnut);

        // Vẽ biểu đồ bằng cách sử dụng Chart.js thông qua JSRuntime
        JS.InvokeVoidAsync("eval", $"var ctx = document.getElementById('orderDoughnutChart').getContext('2d'); new Chart(ctx, {jsonOptionsdoughnut});");


    }

    private bool isInitialized;
    private bool isAuthenticated = false;
    private bool modalUpdateInfo = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            // Khởi tạo trạng thái xác thực
            await _authAdmin.InitializeAuthenticationState();
            isInitialized = true;

            // Kiểm tra người dùng đã đăng nhập hay chưa
            isAuthenticated = await _authAdmin.IsAuthenticatedAsync();

            if (!isAuthenticated)
            {
                nav.NavigateTo("/admin/login");
            }
            else
            {
                // Kiểm tra vai trò của người dùng
                isAdmin = await RoleService.UserIsInRoleAsync("Admin");


                if (!isAdmin)
                {
                    nav.NavigateTo("/admin/sell", true); // Điều hướng đến trang không có quyền
                    return;
                }
            }
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {

        selectedMode = "day";
        selectedModeUser = "dayUser";
        await LoadPosts();
        await LoadTop5CustomersAsync();
    }
    public class CustomerDto
    {
        public string Name { get; set; }
        public int? TotalOrders { get; set; }
        public decimal? TtotalMoneySpent { get; set; }
    }
}
