@page "/login"
@layout Shared.LoginLayout
@inject NavigationManager Navigation
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IAccountService accountService
<div class="login-form">

    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h3>Đăng nhập</h3>
        <div class="mb-3">
            <label for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
        </div>

        <div class="mb-3">
            <label for="password">Mật khẩu</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        </div>

        <button type="submit" class="btn btn-primary">Đăng nhập</button>
    </EditForm>
</div>

<style>
    .login-form {
        background-color: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
</style>
@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private SignInModel loginModel = new SignInModel();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var token = await accountService.SignInAsync(loginModel);
            if (!string.IsNullOrEmpty(token))
            {
                await sessionStorage.SetItemAsync("authToken", token);
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Đăng nhập không thành công. Vui lòng kiểm tra lại email và mật khẩu.";
                Console.WriteLine(errorMessage);
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi xảy ra khi đăng nhập: {ex.Message}";
            Console.WriteLine(errorMessage); 
        }
    }
}
