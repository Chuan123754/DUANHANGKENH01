@page "/admin/account/allaccount"
@using ViewsFE.Models.DTO
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IAccountService accountService

<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">

            <div class="row g-2 align-items-center">
                <div class="col d-flex gap-3">
                    <h2 class="page-title">
                        Danh sách tài khoản
                    </h2>
                    <a @onclick="AddNewAccount" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-plus-lg"> </i> Thêm tài khoản
                    </a>

                </div>

            </div>
        </div>
    </div>

    <div class="page-body">
        <div class="container-xl">

            <div class="card">
                <div class="card-body">
                    <div class="search-box d-flex align-items-center justify-content-between mb-3">
                        <div></div>
                        <div class="form-group d-flex gap-2">
                            <input type="text" @bind="searchKeyword" class="form-control" placeholder="Nhập từ khóa tìm kiếm" />

                            <button class="btn btn-primary">Tìm kiếm</button>
                        </div>
                    </div>
                    <div id="table-default" class="table-responsive">

                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Tên</th>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Vai trò</th>
                                    <th>Trạng thái</th>
                                   
                                </tr>
                            </thead>
                            <tbody>
                                @if (accounts != null && accounts.Any())
                                {
                                    @foreach (var account in accounts)
                                    {
                                        <tr class="post-row">
                                            <td>
                                                @account.Account.FirstName @account.Account.LastName
                                                <br />
                                                <div class="cell-action">
                                                    <a class="cell-action-edit text-primary" @onclick="() => EditAccount(account.Account.Id)" >Chỉnh sửa</a> 
                                                    <a class="cell-action-delete text-danger" @onclick="() => DeleteAccount(account.Account.Id)">Xóa</a>
                                                    <a class="cell-action-delete text-warning" @onclick="() => DeleteAccount(account.Account.Id)">Toggle Lock</a>
                                                    <a class="cell-action-delete text-green" @onclick="() => NavDetails(account.Account.Id)">Xem chi tiết</a>
                                                </div>
                                            </td>
                                            <td>
                                                @account.Account.UserName                                            
                                            </td>
                                            <td>@account.Account.Email</td>
                                            <td>
                                                @if (account.Roles == null || account.Roles.Count == 0)
                                                {
                                                    <span>Không có vai trò</span>
                                                }
                                                else
                                                {
                                                    @foreach (var role in account.Roles)
                                                    {
                                                        <span>@role</span>
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (account.Account.LockoutEnd != null && account.Account.LockoutEnd > DateTimeOffset.UtcNow)
                                                {
                                                    <span class="text-danger">Khóa</span>
                                                }
                                                else
                                                {
                                                    <span class="text-success">Hoạt động</span>
                                                }
                                            </td>

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-center">Không có tài khoản nào.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<AccountWithRoles> accounts;
    private string searchKeyword = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadAccounts();
    }

    private async Task LoadAccounts()
    {
        accounts = await accountService.GetAllAccountsAsync();
    }

    private void AddNewAccount()
    {
        Navigation.NavigateTo("/admin/account/create");
    }
    private async Task NavDetails(string id)
    {
        Navigation.NavigateTo($"/admin/account/details/{id}");
    }
    private void EditAccount(string accountId)
    {
        Navigation.NavigateTo($"/account/edit/{accountId}");
    }

    private async Task DeleteAccount(string accountId)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", "Chắc chắn muốn xóa tài khoản này?");
        if (confirm)
        {
            await accountService.DeleteAccountAsync(accountId);
            await LoadAccounts();
            StateHasChanged();
        }
    }

    private async Task ToggleLock(string id)
    {
        await accountService.ToggleLockAccountAsync(id);
        await LoadAccounts(); // Tải lại danh sách tài khoản sau khi thực hiện thao tác
    }
}
<style>
    .action-buttons {
        display: none;
    }

    .post-row:hover .action-buttons {
        display: inline;
    }

    table th, table td {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    .status-public {
        color: green; /* "Công khai" */
    }

    .status-unpublished {
        color: red; /* "Không công khai" */
    }

    .status-inactive {
        1 color: gray; /* "Không hoạt động" */
    }

    .status-danger {
        color: red;
    }
</style>
