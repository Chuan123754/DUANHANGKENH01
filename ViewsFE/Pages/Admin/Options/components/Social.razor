@page "/admin/option/social"
@using System.Net.Http.Headers
@inject HttpClient Http
<EditForm Model="@socialOptions" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group d-flex align-items-center row mb-3">
        <label class="text-nowrap fw-bold col-12 col-md-2">Facebook</label>
        <div class="col-12 col-md-9">
            <InputText class="form-control" @bind-Value="socialOptions.SocialFacebook" />
        </div>
    </div>

    <div class="form-group d-flex align-items-center row mb-3">
        <label class="text-nowrap fw-bold col-12 col-md-2">Twitter</label>
        <div class="col-12 col-md-9">
            <InputText class="form-control" @bind-Value="socialOptions.SocialTwitter" />
        </div>
    </div>

    <div class="form-group d-flex align-items-center row mb-3">
        <label class="text-nowrap fw-bold col-12 col-md-2">Instagram</label>
        <div class="col-12 col-md-9">
            <InputText class="form-control" @bind-Value="socialOptions.SocialInstagram" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary mt-5">Lưu</button>
</EditForm>


@code {
    private SocialOptions socialOptions = new SocialOptions();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Lấy các tùy chọn mạng xã hội từ API hoặc dịch vụ
            socialOptions.SocialFacebook = await GetOption("social_facebook");
            socialOptions.SocialTwitter = await GetOption("social_twitter");
            socialOptions.SocialInstagram = await GetOption("social_instagram");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi tải dữ liệu: {ex.Message}");
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("admin/api/options", socialOptions);
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Cập nhật thành công!");
            }
            else
            {
                Console.WriteLine("Cập nhật không thành công! Mã lỗi: " + response.StatusCode);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi gửi dữ liệu: {ex.Message}");
        }
    }

    private async Task<string> GetOption(string optionName)
    {
        try
        {
            var response = await Http.GetStringAsync($"admin/api/options/{optionName}");
            return response; // Đảm bảo rằng dữ liệu trả về đúng định dạng
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"Lỗi khi gọi API: {httpEx.Message}");
            return string.Empty; // Trả về giá trị mặc định nếu gặp lỗi
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi: {ex.Message}");
            return string.Empty;
        }
    }

    public class SocialOptions
    {
        public string SocialFacebook { get; set; }
        public string SocialTwitter { get; set; }
        public string SocialInstagram { get; set; }
    }
}
