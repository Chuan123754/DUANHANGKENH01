@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager Navigation
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <RedirectToLogin />
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private bool isInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            isInitialized = true; // Đảm bảo chỉ gọi một lần
            var token = await sessionStorage.GetItemAsync<string>("authToken");

            if (string.IsNullOrEmpty(token))
            {
                Navigation.NavigateTo("/login");
            }
        }
    }
}
